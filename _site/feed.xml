<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="http://jekyllrb.com" version="3.4.3">Jekyll</generator><link href="http://github.com/pages/Andrewrock/feed.xml" rel="self" type="application/atom+xml" /><link href="http://github.com/pages/Andrewrock/" rel="alternate" type="text/html" /><updated>2017-04-25T22:03:03+01:00</updated><id>http://github.com/pages/Andrewrock/</id><entry><title type="html">CSS Grid pt2</title><link href="http://github.com/pages/Andrewrock/steve-jobs.html" rel="alternate" type="text/html" title="CSS Grid pt2" /><published>2017-04-09T00:00:00+01:00</published><updated>2017-04-09T00:00:00+01:00</updated><id>http://github.com/pages/Andrewrock/steve-jobs</id><content type="html" xml:base="http://github.com/pages/Andrewrock/steve-jobs.html">&lt;style&gt;
  @import url('https://fonts.googleapis.com/css?family=Oswald:400,700');
&lt;/style&gt;

&lt;div class=&quot;demo&quot;&gt;

  &lt;div class=&quot;demo-header-container&quot;&gt;
    &lt;div class=&quot;demo-header&quot;&gt;
      &lt;h1 class=&quot;vertical&quot;&gt;THINK DIFFERENT&lt;/h1&gt;
      &lt;h1 class=&quot;dob&quot;&gt;1955-2011&lt;/h1&gt;

      &lt;div class=&quot;demo-text-area&quot;&gt;
        &lt;p&gt;
      &lt;span class=&quot;rainbow-text&quot;&gt;Here's to the crazy ones. The misfits. The rebels. The troublemakers.
      The round pegs in the square holes.&lt;/span&gt;
      &lt;span class=&quot;rainbow-text&quot;&gt;The ones who see things differently.
      They're not fond of rules. And they have no respect for the status quo.
      You can quote them,&lt;/span&gt;
      &lt;span class=&quot;rainbow-text&quot;&gt; disagree with them, glorify or vilify them.
      About the only thing you can't do is ignore them.&lt;/span&gt;
      &lt;span class=&quot;rainbow-text&quot;&gt;Because they change things. They push the human race forward.
      And while some may see them as the crazy ones,&lt;/span&gt;
      &lt;span class=&quot;rainbow-text&quot;&gt;we see genius.
      Because the people who are crazy enough&lt;/span&gt;
      &lt;span class=&quot;rainbow-text&quot;&gt; to think they can change the world,
      are the ones who do.&lt;/span&gt;
        &lt;/p&gt;

        &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;
        &lt;!-- Generator: Adobe Illustrator 12.0.0, SVG Export Plug-In . SVG Version: 6.00 Build 51448)  --&gt;

        &lt;svg
   xmlns:dc=&quot;http://purl.org/dc/elements/1.1/&quot;
   xmlns:cc=&quot;http://creativecommons.org/ns#&quot;
   xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;
   xmlns:svg=&quot;http://www.w3.org/2000/svg&quot;
   xmlns=&quot;http://www.w3.org/2000/svg&quot;
   xmlns:sodipodi=&quot;http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd&quot;
   xmlns:inkscape=&quot;http://www.inkscape.org/namespaces/inkscape&quot;
   version=&quot;1.1&quot;
   id=&quot;Layer_1&quot;
   class=&quot;apple-logo&quot;
   width=&quot;500&quot;
   height=&quot;550&quot;
   viewBox=&quot;0 0 500.00001 549.99998&quot;
   overflow=&quot;visible&quot;
   enable-background=&quot;new 0 0 499.524 554.546&quot;
   xml:space=&quot;preserve&quot;
   inkscape:version=&quot;0.48.1 &quot;
   sodipodi:docname=&quot;20111009182803!Apple_Computer_Logo_rainbow.svg&quot;
   style=&quot;overflow:visible&quot;&gt;&lt;metadata
   id=&quot;metadata25&quot;&gt;&lt;rdf:RDF&gt;&lt;cc:Work
       rdf:about=&quot;&quot;&gt;&lt;dc:format&gt;image/svg+xml&lt;/dc:format&gt;&lt;dc:type
         rdf:resource=&quot;http://purl.org/dc/dcmitype/StillImage&quot; /&gt;&lt;/cc:Work&gt;&lt;/rdf:RDF&gt;&lt;/metadata&gt;&lt;defs
   id=&quot;defs23&quot; /&gt;&lt;sodipodi:namedview
   pagecolor=&quot;#ffffff&quot;
   bordercolor=&quot;#666666&quot;
   borderopacity=&quot;1&quot;
   objecttolerance=&quot;10&quot;
   gridtolerance=&quot;10&quot;
   guidetolerance=&quot;10&quot;
   inkscape:pageopacity=&quot;0&quot;
   inkscape:pageshadow=&quot;2&quot;
   inkscape:window-width=&quot;1280&quot;
   inkscape:window-height=&quot;738&quot;
   id=&quot;namedview21&quot;
   showgrid=&quot;false&quot;
   showguides=&quot;true&quot;
   inkscape:guide-bbox=&quot;true&quot;
   inkscape:zoom=&quot;0.93590068&quot;
   inkscape:cx=&quot;249.76199&quot;
   inkscape:cy=&quot;277.27301&quot;
   inkscape:window-x=&quot;-8&quot;
   inkscape:window-y=&quot;-8&quot;
   inkscape:window-maximized=&quot;1&quot;
   inkscape:current-layer=&quot;Layer_1&quot; /&gt;
&lt;g
   id=&quot;g3&quot;
   transform=&quot;matrix(0.9869271,0,0,0.99106002,3.5008005,0.90716963)&quot;&gt;

		&lt;path
   clip-rule=&quot;evenodd&quot;
   stroke-miterlimit=&quot;2.6131&quot;
   d=&quot;m 25.824,200.612 c 0.166,-0.273 0.342,-0.542 0.518,-0.806 28.447,-43.799 73.32,-69.434 115.518,-69.434 42.969,0 69.98,23.555 105.498,23.555 34.463,0 55.454,-23.589 105.132,-23.589 37.534,0 77.329,20.439 105.674,55.781 -7.837,4.292 -14.907,9.165 -21.226,14.521 l -411.114,-0.028 0,0 z&quot;
   id=&quot;path5&quot;
   inkscape:connector-curvature=&quot;0&quot;
   style=&quot;fill:#61bb46;fill-rule:evenodd;stroke:#61bb46;stroke-width:2.9849;stroke-miterlimit:2.61310005&quot; /&gt;

		&lt;path
   clip-rule=&quot;evenodd&quot;
   stroke-miterlimit=&quot;2.6131&quot;
   d=&quot;M 314.808,90.875 C 332.84,67.716 346.556,35.016 341.585,1.583 312.103,3.604 277.62,22.374 257.479,46.808 c -18.276,22.197 -33.364,55.117 -27.49,87.095 32.187,1.001 65.483,-18.218 84.819,-43.028 l 0,0 z&quot;
   id=&quot;path7&quot;
   inkscape:connector-curvature=&quot;0&quot;
   style=&quot;fill:#61bb46;fill-rule:evenodd;stroke:#61bb46;stroke-width:2.9849;stroke-miterlimit:2.61310005&quot; /&gt;

		&lt;path
   clip-rule=&quot;evenodd&quot;
   stroke-miterlimit=&quot;2.6131&quot;
   d=&quot;M 24.356544,199.96661 C 12.105918,219.15949 3.6294315,246.66842 1.38,270.79701 l 397.43701,-0.0102 c 4.29717,-26.39752 18.58564,-51.61732 41.233,-70.79103 l -415.693466,-0.0292 0.02346,0 z&quot;
   id=&quot;path9&quot;
   style=&quot;fill:#fdb827;fill-rule:evenodd;stroke:none&quot;
   inkscape:connector-curvature=&quot;0&quot;
   sodipodi:nodetypes=&quot;ccccccc&quot; /&gt;

		&lt;path
   clip-rule=&quot;evenodd&quot;
   stroke-miterlimit=&quot;2.6131&quot;
   d=&quot;M 4.989,340.998 C 1.127,316.354 0.502,292.595 2.928,270.798 l 394.341,-0.01 c -3.857,23.638 -0.62,48.237 9.136,70.225 l -401.416,-0.015 0,0 z&quot;
   id=&quot;path11&quot;
   inkscape:connector-curvature=&quot;0&quot;
   style=&quot;fill:#f5821f;fill-rule:evenodd;stroke:#f5821f;stroke-width:2.9849;stroke-miterlimit:2.61310005&quot; /&gt;

		&lt;path
   clip-rule=&quot;evenodd&quot;
   stroke-miterlimit=&quot;2.6131&quot;
   d=&quot;M 24.261,411.193 C 14.949,387.609 8.573,363.922 4.989,340.998 l 401.416,0.015 c 12.427,28.018 35.425,51.821 67.808,64.053 -0.962,2.139 -1.89,4.185 -2.783,6.157 l -447.169,-0.03 0,0 z&quot;
   id=&quot;path13&quot;
   inkscape:connector-curvature=&quot;0&quot;
   style=&quot;fill:#e03a3e;fill-rule:evenodd;stroke:#e03a3e;stroke-width:2.9849;stroke-miterlimit:2.61310005&quot; /&gt;

		&lt;path
   clip-rule=&quot;evenodd&quot;
   stroke-miterlimit=&quot;2.6131&quot;
   d=&quot;m 471.429,411.222 c -11.118,24.443 -17.563,37.129 -32.949,60.547 -2.07,3.145 -4.209,6.362 -6.436,9.609 L 61.517,481.412 C 60.33,479.644 59.154,477.877 57.996,476.124 44.143,455.025 32.928,433.15 24.261,411.192 l 447.168,0.03 0,0 z&quot;
   id=&quot;path15&quot;
   inkscape:connector-curvature=&quot;0&quot;
   style=&quot;fill:#963d97;fill-rule:evenodd;stroke:#963d97;stroke-width:2.9849;stroke-miterlimit:2.61310005&quot; /&gt;
	&lt;path
   stroke-miterlimit=&quot;2.6131&quot;
   d=&quot;m 472.972,550.7778 c 13.589,0 24.604,-11.016 24.604,-24.595 0,-13.589 -11.016,-24.6 -24.604,-24.6 -13.588,0 -24.604,11.011 -24.604,24.6 0,13.579 11.015,24.595 24.604,24.595 m -6.992,-9.648 v -27.485 h 11.011 m 6.645,27.182 -6.553,-13.892 m -11.054,-0.244 h 11.006 m -0.01,-0.034 c 2.734,0 5.503,-2.891 5.503,-6.46 0,-3.799 -2.886,-6.553 -5.537,-6.553&quot;
   id=&quot;path17&quot;
   inkscape:connector-curvature=&quot;0&quot;
   style=&quot;fill:none;stroke:#000000;stroke-width:3.89479995;stroke-miterlimit:2.61310005&quot; /&gt;

		&lt;path
   clip-rule=&quot;evenodd&quot;
   stroke-miterlimit=&quot;2.6131&quot;
   d=&quot;m 432.044,481.378 c -22.666,33.203 -53.096,69.741 -90.02,70.088 -36.03,0.327 -45.273,-23.447 -94.155,-23.179 -48.882,0.273 -59.087,23.594 -95.117,23.257 -38.521,-0.356 -68.433,-36.24 -91.235,-70.132 l 370.527,-0.034 0,0 z&quot;
   id=&quot;path19&quot;
   inkscape:connector-curvature=&quot;0&quot;
   style=&quot;fill:#009ddc;fill-rule:evenodd;stroke:#009ddc;stroke-width:2.9849;stroke-miterlimit:2.61310005&quot; /&gt;
&lt;/g&gt;
&lt;/svg&gt;
      &lt;/div&gt;

    &lt;/div&gt;
    &lt;ul class=&quot;demo-stats&quot;&gt;
      &lt;li&gt;&lt;span class=&quot;year&quot;&gt;1984&lt;/span&gt; The Macintosh
      &lt;span class=&quot;hr&quot;&gt;&lt;/span&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;span class=&quot;year&quot;&gt;1986-1996&lt;/span&gt; From NeXT to Pixar
        &lt;span class=&quot;hr&quot;&gt;&lt;/span&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;span class=&quot;year&quot;&gt;1997-2004&lt;/span&gt; iMac and iPod
        &lt;span class=&quot;hr&quot;&gt;&lt;/span&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;span class=&quot;year&quot;&gt;2005-2011&lt;/span&gt; iPhone and iPad
        &lt;span class=&quot;hr&quot;&gt;&lt;/span&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;

  &lt;div class=&quot;demo-content-container&quot;&gt;
    &lt;h1 class=&quot;article-intro&quot;&gt;iMourn The Loss..&lt;/h1&gt;
    &lt;div class=&quot;demo-blurb&quot;&gt;
      &lt;p&gt;&lt;span class=&quot;intro-text&quot;&gt;I&lt;/span&gt; spend most of any waking day inside Steve
        jobs' idea. I'm roused out of bed by an alarm clock set by my
        iPhone, which is docked to it. I get up and go for a run,
        listening to my iPod Nano on shuffle. Back home I get
        dressed,listening to NPR (iPhone app).
        Breakfast time and I read the paper,
        which is not on the doorstep yet but is on my iPad. Walk the kids to school,
        checking tweets on the way back. Spend the day at my desk, looking into a
        rectangle with a glowing Apple in back of it. At night, as Time's television
        critic, I'm in front of the TV—usually with the iPad on my lap.
      &lt;/p&gt;

      &lt;p&gt;That's where I was when word of Jobs' death came to me as he would have wanted it to:
        as a news alert on my iPad. I was watching Jeopardy! with my kids and found myself
        trying to explain why I would be sad about the death of the founder of a giant company,
        whom I didn't know. So I told them about all the things they use and see every day
        that came from Jobs: the computers, the touchscreens, the Pixar movies, the computer mouse.
      &lt;/p&gt;

      &lt;h2 class=&quot;jobs-quote&quot;&gt;when word of Jobs' death came to me as he would have wanted it to: as a news alert on my iPad&lt;/h2&gt;

    &lt;/div&gt;
    &lt;div class=&quot;demo-blurb&quot;&gt;
      &lt;p&gt;
        But really what we got from Jobs and his company was an idea: that computers were
        something that belonged in your life, not in a science lab. That you would want to use them,
        play with them, touch them, carry them with you. That they were not just for numbers but also for music,
        movies, magazines, creation, communication. A lot of people made computers in the
        past decades, but it was Steve Jobs who understood that he was making media.
      &lt;/p&gt;

      &lt;h2 class=&quot;jobs-quote&quot;&gt;computers were something that belonged in your life, not in a science lab&lt;/h2&gt;

      &lt;p&gt;
        It's been said, correctly, that Jobs did not invent many of the innovations that Apple came
        to be known for: the graphical user interface, the touchscreen, the personal computer itself.
        He was a popularizer, but I'm not sure that's a lesser accomplishment. The technology to put
        a friendly interface on your desk, a music and video library in your pocket, an arsenal of info-
        appliances on your phone would have existed without him. Someone would even have tried to sell it.
        But without Jobs to realize, before we knew it, how we wanted to use technology as an
        effortless extension of our consciousness, not a specialist's tool—none of it would
        be as ubiquitous or as well realized. Steve Jobs was a great salesman because he was a great consumer.
      &lt;/p&gt;

    &lt;/div&gt;
    &lt;div class=&quot;jobs-images&quot;&gt;
      &lt;div class=&quot;steve one&quot;&gt;&lt;/div&gt;
      &lt;h2 class=&quot;jobs-quote&quot;&gt;&lt;span&gt;He was a popularizer&lt;/span&gt;&lt;/h2&gt;
      &lt;div class=&quot;steve two&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;div class=&quot;demo-blurb&quot;&gt;
      &lt;p&gt;
        And by making devices an extension of ourselves, he helped change our understanding of
        media; it would no longer be just a system you got information from but a system you contrib uted information to.
        As he envisioned them—before the rest of us knew we wanted this computers were
        tools not of calculation but of communication.
      &lt;/p&gt;

      &lt;h2 class=&quot;jobs-quote&quot;&gt;computers were tools not of calculation but of communication.&lt;/h2&gt;

      &lt;p&gt;
        That's part of the reason that Jobs' aesthetic sense for Apple so famously fastidious and
        demanding—was key to what he did. Yes, his products were pretty on purpose as were '50s sedans and
        illuminated manuscripts. (Hence the fact that the iPad is such a luminous showcase
        for magazines and video.) But the look and feel of Apple gadgets did not just make them beautiful or make
        you feel cool. They communicated an idea about the world too.
      &lt;/p&gt;
    &lt;/div&gt;
    &lt;div class=&quot;demo-blurb&quot;&gt;
      &lt;p&gt;
        Like other great modernists, Jobs knew that simplicity was not just about sleekness but also about function.
        He intuited that, as many designers say, the best design is barely there. The infinity pool like touchscreen of
        my iPhone says this Star Trek Swiss Army knife of information in my pocket should become, wholly,
        whatever I want it to be, with no form factor getting in the way. It should not merely run Angry Birds;
        it should become Angry Birds. The slab-of-glass iPad was his last and truest attempt at the ideal
        computer: a window, a pane that you brush your fingertips against, a portal you reach through.
      &lt;/p&gt;
      &lt;p&gt;
        That, as I was trying to explain to my kids, is the reason I felt so deeply sad about a guy
        who ran some company: because my experience of his products, like I suspect many of yours, was so personal.
        Apple's devices are made, like a hot rod, for customization: your music, your pictures, your wallpaper.
        It's no wonder that their owners should feel their identities bound up more in them than in any other
        modern consumer goods since the automobile.
      &lt;/p&gt;

    &lt;/div&gt;

    &lt;div class=&quot;jobs-images&quot;&gt;
      &lt;div class=&quot;steve three&quot;&gt;&lt;/div&gt;

      &lt;div class=&quot;steve four&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class=&quot;demo-blurb&quot;&gt;
      &lt;p&gt;
        So, yes, my aching over Jobs' loss is partly a selfish nostalgia for my own life past.
        Macintoshes were the first computers I ever used in a college computer lab; I wrote my first news
        paper stories on them, played Dark Castle on them, discovered the World Wide Web on them and
        edited my kids' baby videos on them.
      &lt;/p&gt;

      &lt;p&gt;
        But it's also that the things Apple makes are expressions of the idea that technology should be personal,
        that it only matters to the extent that it can add to what we find important in life.
        Which is why I'll spend much of tomorrow, too, inside Steve Jobs' idea that a
        computer should be an elegant, simple frame and we should fill it with the
        things that matter to us.
      &lt;/p&gt;

      &lt;h2 class=&quot;jobs-quote&quot;&gt;the things Apple makes are expressions of the idea that technology should be personal&lt;/h2&gt;


    &lt;/div&gt;

    &lt;div class=&quot;steve five&quot;&gt;&lt;/div&gt;

  &lt;/div&gt;

&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">CSS Grid</title><link href="http://github.com/pages/Andrewrock/css-grid.html" rel="alternate" type="text/html" title="CSS Grid" /><published>2017-04-09T00:00:00+01:00</published><updated>2017-04-09T00:00:00+01:00</updated><id>http://github.com/pages/Andrewrock/css-grid</id><content type="html" xml:base="http://github.com/pages/Andrewrock/css-grid.html">&lt;div class=&quot;grid&quot;&gt;
  &lt;div class=&quot;grid-header&quot;&gt;
    &lt;h1&gt;&lt;span&gt; SPORT &lt;/span&gt;&lt;/h1&gt;
    &lt;h1&gt;US MASTERS&lt;/h1&gt;
    &lt;h1&gt;10-04-2017&lt;/h1&gt;
  &lt;/div&gt;
  &lt;div class=&quot;grid-blurb img1&quot;&gt;
    &lt;h1&gt;2017 Masters Champion&lt;/h1&gt;
  &lt;/div&gt;
  &lt;div class=&quot;grid-blurb&quot;&gt;
    &lt;h2&gt;Same Old Sergio Writes a New Script&lt;/h2&gt;
    &lt;p&gt; AUGUSTA, GA — Throughout the first nine holes of Sunday’s final round at the Masters, Sergio García was greeted with thunderous applause from the grandstands. Just 15 years ago, when he was perceived as precocious but persnickety, he was ridiculed
      by crowds at American major golf championships. But now García, 37, was a fan favorite.
    &lt;/p&gt;
    &lt;p&gt;
      He had the empathy of the galleries because they knew the 18 holes of Augusta National Golf Club had grown to be his personal house of horrors. Before this year, García had contended for the Masters title six times and never finished higher than eighth.
      Sometimes he fell all the way to 38th or 40th.
    &lt;/p&gt;
    &lt;p class=&quot;quote&quot;&gt;People will always root for someone trying to shed a millstone. Enough is enough.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;stats&quot;&gt;
    &lt;ul class=&quot;stat-list&quot;&gt;
      &lt;li class=&quot;stat&quot;&gt;&lt;span class=&quot;stat-number&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;stat-label&quot;&gt;Birdies&lt;/span&gt;&lt;/li&gt;
      &lt;li class=&quot;stat&quot;&gt;&lt;span class=&quot;stat-number&quot;&gt;80%&lt;/span&gt;&lt;span class=&quot;stat-label&quot;&gt;Fairways&lt;/span&gt;&lt;/li&gt;
      &lt;li class=&quot;stat&quot;&gt;&lt;span class=&quot;stat-number&quot;&gt;75%&lt;/span&gt;&lt;span class=&quot;stat-label&quot;&gt;Greens&lt;/span&gt;&lt;/li&gt;
      &lt;li class=&quot;stat&quot;&gt;&lt;span class=&quot;stat-number&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;stat-label&quot;&gt;Three-Putts&lt;/span&gt;&lt;/li&gt;
      &lt;li class=&quot;stat&quot;&gt;&lt;span class=&quot;stat-number&quot;&gt;$1.98&lt;/span&gt;&lt;span class=&quot;stat-label&quot;&gt;Prize Money&lt;/span&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
  &lt;div class=&quot;grid-blurb&quot;&gt;
    &lt;p&gt; And besides, this was the first April that García had arrived at Augusta promising a new, uplifting outlook.
      His normal mien, which he had never done anything to hide, had been to expect the worst.
      If he was promising to turn over a new leaf, the crowd was playing along.
      It cheered him as he left the ninth green and walked toward that famed golf crucible:
      the back nine on a Sunday at the Masters.
    &lt;/p&gt;

    &lt;p&gt;But within minutes, the spectators felt sorry for him all over again.&lt;/p&gt;

    &lt;p class=&quot;quote&quot;&gt;Poor Sergio. Same old Sergio. There he was, going to pieces again.&lt;/p&gt;

    &lt;p&gt;He bogeyed the 10th and 11th holes, and on the 13th hole his tee shot was so deep in the bushes he had
      to declare it unplayable. His playing partner and good friend, Justin Rose, appeared to be
      running away with the championship.
    &lt;/p&gt;

  &lt;/div&gt;
  &lt;div class=&quot;grid-blurb&quot;&gt;
    &lt;p&gt;
      And then something unexpectedly good finally happened to García on a Masters Sunday.
    &lt;/p&gt;
    &lt;p&gt;
      He made a sparkling recovery for a par on the 13th, followed by a birdie on the 14th hole and a stunning eagle on the 15th.
    &lt;/p&gt;
    &lt;p&gt;
      The fans, his newest best friends, were delirious and even hugging in the stands. You could see their thoughts in their eyes: Sergio might actually win this thing.
    &lt;/p&gt;
    &lt;p&gt;Not so fast. Three timid putts on consecutive holes led to a playoff with Rose. But it was just his Masters demons toying with him again. It turns out García had suffered enough. He sank a birdie putt on the first playoff to clinch the title, eliciting,
      once more, unbridled applause.
    &lt;/p&gt;
    &lt;p&gt;
      &lt;span&gt;“I felt like I was back in Spain,” García &lt;/span&gt;, the third Spaniard to win the Masters, said of the crowd’s reaction. “It’s been a long, long wait, but it’s that much sweeter because of that wait. People believed in me, sometimes more than
      I did, and that mattered a great deal.”
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;grid-blurb&quot;&gt;
    &lt;p&gt;
      Even Rose, a British golfer who is himself popular around the globe, gave credit to the galleries for their role in his friend’s victory.
    &lt;/p&gt;
    &lt;p&gt;“I was quite pleased to see people rallying around Sergio, because he’s had his fair share of heartbreak,” Rose said, well aware that García had gone 73 previous major championship tournaments without a victory. “He often feels like he’s not supported
      the way he wants to be in America. But this time, that wasn’t the case.
    &lt;/p&gt;
    &lt;p&gt;“The crowd was mostly with him, and I think it’s because people felt like it was his time. They realized that he’s paid his dues. Sergio is the best player not to have won a major no longer.”
    &lt;/p&gt;
    &lt;p&gt;
      García said he found himself strangely at ease even as his game appeared to be unraveling.
    &lt;/p&gt;
    &lt;p class=&quot;quote&quot;&gt;
      And then something unexpectedly good finally happened to García on a Masters Sunday.
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;grid-blurb&quot;&gt;
    &lt;p&gt;“Even at 13, I felt calm — it was the calmest I ever felt at a major championship on a Sunday,” he said. “Even the bogeys did not bother me. And when we got on the green, I knew that if I could make a par, I could do some good things and still maybe catch Justin.”&lt;/p&gt;
    &lt;p class=&quot;quote&quot;&gt;You could see their thoughts in their eyes: Sergio might actually win this thing.&lt;/p&gt;
    &lt;p&gt;García made a stirring up and down to make that par, and when Rose’s five-foot birdie putt slid past the hole, García trailed by only two strokes. He cut that deficit in half with the birdie on the 14th, then smashed his next drive 330 yards down
      the middle. His downhill 8-iron from 192 yards will be the shot that is most replayed when the highlights of the 2017 Masters are shown for years to come.
    &lt;/p&gt;
    &lt;p&gt;García’s ball was tracking for the pin from the time it left his club, and it landed just a few inches from the hole before ricocheting off the flagstick and caroming 14 feet away.&lt;/p&gt;
  &lt;/div&gt;
  &lt;div class=&quot;grid-blurb img2&quot;&gt;
    &lt;h1&gt;
      Major attempts
    &lt;/h1&gt;
  &lt;/div&gt;
  &lt;div class=&quot;grid-blurb&quot;&gt;
    &lt;p&gt; “I wonder if that hit the flag?” García asked with a smile.
      In other years, there is a chance he would have bemoaned the outcome, cursing his fate since even a nearly perfect shot ended up so far from the hole.
    &lt;/p&gt;
    &lt;h3 class=&quot;quote&quot;&gt;I wonder if that hit the flag?&lt;/h3&gt;

    &lt;p&gt;On Sunday, García simply sank the putt instead. The tournament was never the same after that moment, and most likely, García’s career will never be the same, either.&lt;/p&gt;
    &lt;p&gt;“Not letting things get to me that used to get to me in the past has been a big step forward for me,” he said. “I’m not going to lie — I didn’t always feel this way, and not at Augusta, because I started to feel uncomfortable here. But I came to be
      at peace with it. I accepted what I needed to change. I feel perfectly at home now.”

    &lt;/p&gt;
    &lt;p&gt;At dusk on Sunday, wearing the green jacket that is awarded to the winner of the Masters, García was cheered anew at a ceremony behind the 18th green.&lt;/p&gt;

    &lt;p class=&quot;quote&quot;&gt;García’s career will never be the same, either&lt;/p&gt;

    &lt;p&gt;Sergio García bowed, then stood straight and blew kisses to the crowd.&lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">SPORT US MASTERS 10-04-2017 2017 Masters Champion Same Old Sergio Writes a New Script AUGUSTA, GA — Throughout the first nine holes of Sunday’s final round at the Masters, Sergio García was greeted with thunderous applause from the grandstands. Just 15 years ago, when he was perceived as precocious but persnickety, he was ridiculed by crowds at American major golf championships. But now García, 37, was a fan favorite. He had the empathy of the galleries because they knew the 18 holes of Augusta National Golf Club had grown to be his personal house of horrors. Before this year, García had contended for the Masters title six times and never finished higher than eighth. Sometimes he fell all the way to 38th or 40th. People will always root for someone trying to shed a millstone. Enough is enough. 14Birdies 80%Fairways 75%Greens 01Three-Putts $1.98Prize Money And besides, this was the first April that García had arrived at Augusta promising a new, uplifting outlook. His normal mien, which he had never done anything to hide, had been to expect the worst. If he was promising to turn over a new leaf, the crowd was playing along. It cheered him as he left the ninth green and walked toward that famed golf crucible: the back nine on a Sunday at the Masters.</summary></entry><entry><title type="html">mix-blend modes</title><link href="http://github.com/pages/Andrewrock/blend-text.html" rel="alternate" type="text/html" title="mix-blend modes" /><published>2017-03-31T00:00:00+01:00</published><updated>2017-03-31T00:00:00+01:00</updated><id>http://github.com/pages/Andrewrock/blend-text</id><content type="html" xml:base="http://github.com/pages/Andrewrock/blend-text.html">&lt;div class=&quot;tutorial-body&quot;&gt;
&lt;p class=&quot;tutorial-paragraph&quot;&gt; We have previously looked at 
&lt;span class=&quot;code-font&quot;&gt;background-blend-mode&lt;/span&gt; you can find that
&lt;span class=&quot;underline-definition&quot;&gt;
&lt;a href=&quot;background-blend-modes.html&quot;&gt;here&lt;/a&gt;&lt;/span&gt;. I discuss the 
different &lt;span class=&quot;code-font&quot;&gt;background-blend-modes&lt;/span&gt;, when
, how and why to use them. If you have no experience with blending I
recommend you checkout that post. This tutorial will focus on
&lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt;, however some examples
will feature both &lt;span class=&quot;code-font&quot;&gt;background-blend-modes&lt;/span&gt;
and &lt;span class=&quot;code-font&quot;&gt;mix-blend-modes&lt;/span&gt;. Let's jump into some
examples first and look at the code after.
&lt;/p&gt;

&lt;div class=&quot;blend-container&quot;&gt;
 &lt;div class=&quot;blend-item mcgregor&quot;&gt;
&lt;h1&gt;&lt;span&gt;I&lt;/span&gt; &lt;span&gt;think&lt;/span&gt;
&lt;span&gt;sharp&lt;/span&gt; &lt;span&gt;and&lt;/span&gt; &lt;span&gt;I&lt;/span&gt;
&lt;span&gt;dream&lt;/span&gt; &lt;span&gt;big&lt;/span&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;blend-container&quot;&gt;
 &lt;div class=&quot;blend-item bukowski&quot;&gt;
   &lt;h1&gt;&lt;span&gt;Find&lt;/span&gt; &lt;span&gt;what&lt;/span&gt; &lt;span&gt;you&lt;/span&gt;
   &lt;span&gt;love&lt;/span&gt; &lt;span&gt;and&lt;/span&gt; &lt;span&gt;let&lt;/span&gt; &lt;span&gt;it&lt;/span&gt;
   &lt;span&gt;kill&lt;/span&gt;&lt;span&gt;you&lt;/span&gt;&lt;/h1&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;blend-container&quot;&gt;
 &lt;div class=&quot;blend-item fergie&quot;&gt;
  &lt;h1&gt;It's getting tickly now &lt;span&gt;squeaky-bum&lt;/span&gt; time I call it&lt;/h1&gt;
 &lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;tutorial-body&quot;&gt;
&lt;p class=&quot;tutorial-paragraph&quot;&gt; As you can see adding
&lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt; can change how text is
presented, couple this with a 
&lt;span class=&quot;code-font&quot;&gt;background-blend-mode&lt;/span&gt; and you can create
some unique designs.
&lt;/p&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;To begin create a 
&lt;span class=&quot;code-font&quot;&gt;div&lt;/span&gt; to serve as a container for our 
content, a &lt;span class=&quot;code-font&quot;&gt;div&lt;/span&gt; to hold our 
&lt;span class=&quot;code-font&quot;&gt;background-image&lt;/span&gt; and heading to apply the 
&lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt;. Lets look at how to 
build the Charles Bukowski quote using both a
&lt;span class=&quot;code-font&quot;&gt;background-blend-mode&lt;/span&gt; and
&lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt;.
&lt;/p&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;The &lt;span class=&quot;code-font&quot;&gt;html&lt;/span&gt; is
quite simple.
&lt;/p&gt;

&lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-html&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;blend-container&quot;&amp;gt;
 &amp;lt;div class=&quot;blend-item bukowski&quot;&amp;gt;
   &amp;lt;h1&amp;gt;&amp;lt;span&amp;gt;find&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;what&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;you&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;love&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;and&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;let&amp;lt;/span&amp;gt;
    &amp;lt;span&amp;gt;kill&amp;lt;/span&amp;gt;&amp;lt;span&amp;gt;you&amp;lt;/span&amp;gt;
   &amp;lt;/h1&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;I have added a class to the
&lt;span class=&quot;code-font&quot;&gt;blend-item&lt;/span&gt;, this class
&lt;span class=&quot;code-font&quot;&gt;bukowski&lt;/span&gt; will add the 
&lt;span class=&quot;code-font&quot;&gt;background-image&lt;/span&gt;,
&lt;span class=&quot;code-font&quot;&gt;background-color&lt;/span&gt; and 
&lt;span class=&quot;code-font&quot;&gt;background-blend-mode&lt;/span&gt;
&lt;/p&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;You may have noticed that every word
is wrapped in a
&lt;span class=&quot;code-font&quot;&gt;span&lt;/span&gt;. This will allow each one to be
individually targeted when applying different properties such as
colour, fonts etc.
&lt;/p&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt; First start by defining our images, 
colours and general styling.&lt;/p&gt;

&lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;$image-two: url('../img/bukowski.jpg');
$colors: #556270, #4ECDC4, #C7F464, #FF6B6B, #C44D58, #6534ff;
$purple: #6534ff;
$width: 100%;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt; Next, style the container and the item
we want to use. I have called these,
&lt;span class=&quot;code-font&quot;&gt;blend-container&lt;/span&gt; and 
&lt;span class=&quot;code-font&quot;&gt;blend-item&lt;/span&gt;.
&lt;/p&gt;

&lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;$image-two: url('../img/bukowski.jpg');
$colors: #556270, #4ECDC4, #C7F464, #FF6B6B, #C44D58, #6534ff;
$purple: #6534ff;
$width: 100%;

.blend-container,
.blend-item {
  box-sizing: border-box;
  display: flex;
  flex-flow: row wrap;
  width: $width;
}

.blend-item {
  align-items: center;
  background-size: cover;
  box-sizing: border-box;
  justify-content: center;

  h1 {
    font-size: 5rem;
    font-weight: 700;
    line-height: .5;
    margin: 0;
    padding: 0 24px;
    text-align: center;
    @media screen and (max-width: 400px) {
      font-size: 4.5rem;
      line-height: .7;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;Create an array of colours. We will use
this to style each &lt;span class=&quot;code-font&quot;&gt;span&lt;/span&gt; tag.
&lt;/p&gt;

&lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;$colors: #556270, #4ECDC4, #C7F464, #FF6B6B, #C44D58, #6534ff;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;To add our desired effects, we have set the
&lt;span class=&quot;code-font&quot;&gt;background-blend-mode&lt;/span&gt; to 
&lt;span class=&quot;code-font&quot;&gt;darken&lt;/span&gt;. If you need to catchup on the 
different &lt;span class=&quot;code-font&quot;&gt;blend-modes&lt;/span&gt; you can 
&lt;span class=&quot;underline-definition&quot;&gt;
&lt;a href=&quot;background-blend-modes.html&quot;&gt;here&lt;/a&gt;&lt;/span&gt;. 
&lt;/p&gt;

&lt;div class=&quot;blend-container&quot;&gt;
 &lt;div class=&quot;blend-item bukowski&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;.bukowski {
 background: $image-two $purple center center / cover no-repeat;
 background-blend-mode: darken;

  h1 {
   mix-blend-mode: exclusion;
  }

  span {
    mix-blend-mode: color;
    @for $i from 1 through length($colors) {
      &amp;:nth-child(#{length($colors)}n+#{$i}) {
        color: nth($colors, $i);
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt; Styling the text, we set the heading to
&lt;span class=&quot;code-font&quot;&gt;exclusion&lt;/span&gt; and each word in our heading
to &lt;span class=&quot;code-font&quot;&gt;color&lt;/span&gt;.
&lt;/p&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;Using the array we already created, we write
a loop that will add a new colour for each 
&lt;span class=&quot;code&quot;&gt;span&lt;/span&gt;. After each iteration the loop will
begin again at the start. To avoid duplicate colours, you can add more
colours to our array.
&lt;/p&gt;

&lt;div class=&quot;blend-container&quot;&gt;
 &lt;div class=&quot;blend-item bukowski&quot;&gt;
   &lt;h1&gt;&lt;span&gt;Find&lt;/span&gt; &lt;span&gt;what&lt;/span&gt; &lt;span&gt;you&lt;/span&gt;
   &lt;span&gt;love&lt;/span&gt; &lt;span&gt;and&lt;/span&gt; &lt;span&gt;let&lt;/span&gt; &lt;span&gt;it&lt;/span&gt;
   &lt;span&gt;kill&lt;/span&gt;&lt;span&gt;you&lt;/span&gt;&lt;/h1&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;As you can see the 
&lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt; is pretty powerful. The use
of a &lt;span class=&quot;code-font&quot;&gt;background-image&lt;/span&gt; is optional. As you
see below the &lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt; will style 
work.&lt;/p&gt;

&lt;div class=&quot;blend-container&quot;&gt;
 &lt;div class=&quot;blend-item bukowski no-image&quot;&gt;
   &lt;h1&gt;&lt;span&gt;Find&lt;/span&gt; &lt;span&gt;what&lt;/span&gt; &lt;span&gt;you&lt;/span&gt;
   &lt;span&gt;love&lt;/span&gt; &lt;span&gt;and&lt;/span&gt; &lt;span&gt;let&lt;/span&gt; &lt;span&gt;it&lt;/span&gt;
   &lt;span&gt;kill&lt;/span&gt;&lt;span&gt;you&lt;/span&gt;&lt;/h1&gt;
  &lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;Taking this one step further, Consider the
following example, a technique that is often used in graphic design and
digital media.
&lt;/p&gt;

&lt;div class=&quot;blend-container&quot;&gt;
 &lt;div class=&quot;blend-item ireland&quot;&gt;
   &lt;h1&gt;Visit Ireland&lt;/h1&gt;
 &lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;Here we have and image and a 
 heading.
&lt;/p&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;The approach to recreate this is the same
as the Bukowski example. We will need a container, a div and a heading.
The only difference here is that we give the heading a 
&lt;span class=&quot;code-font&quot;&gt;background-color&lt;/span&gt;
and a &lt;span class=&quot;code-font&quot;&gt;color&lt;/span&gt;.
&lt;/p&gt;

&lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;$image-four: url('../img/ireland.jpg');
$background-white: #f4f3f1;
$irish-green: #009A49;
$irish-orange: #FF7900;

.ireland {
  align-items: center;
  background: $image-four center center / cover no-repeat;

  h1 {
   background-color: $background-white;
   color: $irish-green;
   line-height: 1.2;
   mix-blend-mode: hard-light;
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p class=&quot;tutorial-paragraph&quot;&gt;Removing the image we are left with&lt;/p&gt;

&lt;div class=&quot;blend-container small&quot;&gt;
 &lt;div class=&quot;blend-item ireland no-image&quot;&gt;
   &lt;h1&gt;Visit Ireland&lt;/h1&gt;
 &lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;We then simply place the heading over our
image to generate the effect.
&lt;/p&gt;

&lt;div class=&quot;blend-container&quot;&gt;
 &lt;div class=&quot;blend-item ireland&quot;&gt;
   &lt;h1&gt;Visit Ireland&lt;/h1&gt;
 &lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;So far we focused on combining
&lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt; and
&lt;span class=&quot;code-font&quot;&gt;background-blend-mode&lt;/span&gt;. We can now
focus on the &lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt; alone.
&lt;/p&gt;


&lt;p class =&quot;tutorial-paragraph&quot;&gt;Let's use the alphabet to understand
&lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt;.
&lt;/p&gt;

&lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;$letter-num: 26;
$colors: #556270, #4ECDC4, #C7F464, #FF6B6B, #C44D58, #6534ff;

.text-blend {
 font-size: 7rem;
 font-weight: 700;
 letter-spacing: -1.2rem;

   @for $i from 1 through length($colors) {
     span {
       &amp;:nth-child(#{length($colors)}n+#{$i}) {
         color: nth($colors, $i)
       }
     }
   }
 }&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;blend-container small&quot;&gt;
 &lt;div class=&quot;blend-item&quot;&gt;
&lt;h1 class=&quot;text-blend unset&quot;&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;b&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;
&lt;span&gt;d&lt;/span&gt;&lt;span&gt;e&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;g&lt;/span&gt;&lt;span&gt;h&lt;/span&gt;
&lt;span&gt;i&lt;/span&gt;&lt;span&gt;j&lt;/span&gt;&lt;span&gt;k&lt;/span&gt;&lt;span&gt;l&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;
&lt;span&gt;n&lt;/span&gt;&lt;span&gt;o&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;q&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;
&lt;span&gt;s&lt;/span&gt;&lt;span&gt;t&lt;/span&gt;&lt;span&gt;u&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;w&lt;/span&gt;
&lt;span&gt;x&lt;/span&gt;&lt;span&gt;y&lt;/span&gt;&lt;span&gt;z&lt;/span&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt;Adding a 
&lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt; we get the following
&lt;/p&gt;

&lt;div class=&quot;blend-container small&quot;&gt;
 &lt;div class=&quot;blend-item&quot;&gt;
&lt;h1 class=&quot;text-blend&quot;&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;b&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;
&lt;span&gt;d&lt;/span&gt;&lt;span&gt;e&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;g&lt;/span&gt;&lt;span&gt;h&lt;/span&gt;
&lt;span&gt;i&lt;/span&gt;&lt;span&gt;j&lt;/span&gt;&lt;span&gt;k&lt;/span&gt;&lt;span&gt;l&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;
&lt;span&gt;n&lt;/span&gt;&lt;span&gt;o&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;q&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;
&lt;span&gt;s&lt;/span&gt;&lt;span&gt;t&lt;/span&gt;&lt;span&gt;u&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;w&lt;/span&gt;
&lt;span&gt;x&lt;/span&gt;&lt;span&gt;y&lt;/span&gt;&lt;span&gt;z&lt;/span&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p class=&quot;tutorial-paragraph&quot;&gt; We can go one step further and animate
the &lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt;
&lt;/p&gt;


&lt;div class=&quot;blend-container small&quot;&gt;
 &lt;div class=&quot;blend-item&quot;&gt;
&lt;h1 class=&quot;text-blend animate&quot;&gt;&lt;span&gt;a&lt;/span&gt;&lt;span&gt;b&lt;/span&gt;&lt;span&gt;c&lt;/span&gt;
&lt;span&gt;d&lt;/span&gt;&lt;span&gt;e&lt;/span&gt;&lt;span&gt;f&lt;/span&gt;&lt;span&gt;g&lt;/span&gt;&lt;span&gt;h&lt;/span&gt;
&lt;span&gt;i&lt;/span&gt;&lt;span&gt;j&lt;/span&gt;&lt;span&gt;k&lt;/span&gt;&lt;span&gt;l&lt;/span&gt;&lt;span&gt;m&lt;/span&gt;
&lt;span&gt;n&lt;/span&gt;&lt;span&gt;o&lt;/span&gt;&lt;span&gt;p&lt;/span&gt;&lt;span&gt;q&lt;/span&gt;&lt;span&gt;r&lt;/span&gt;
&lt;span&gt;s&lt;/span&gt;&lt;span&gt;t&lt;/span&gt;&lt;span&gt;u&lt;/span&gt;&lt;span&gt;v&lt;/span&gt;&lt;span&gt;w&lt;/span&gt;
&lt;span&gt;x&lt;/span&gt;&lt;span&gt;y&lt;/span&gt;&lt;span&gt;z&lt;/span&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">We have previously looked at background-blend-mode you can find that here. I discuss the different background-blend-modes, when , how and why to use them. If you have no experience with blending I recommend you checkout that post. This tutorial will focus on mix-blend-mode, however some examples will feature both background-blend-modes and mix-blend-modes. Let's jump into some examples first and look at the code after.</summary></entry><entry><title type="html">Background-blend modes</title><link href="http://github.com/pages/Andrewrock/background-blend-modes.html" rel="alternate" type="text/html" title="Background-blend modes" /><published>2017-03-30T00:00:00+01:00</published><updated>2017-03-30T00:00:00+01:00</updated><id>http://github.com/pages/Andrewrock/background-blend-modes</id><content type="html" xml:base="http://github.com/pages/Andrewrock/background-blend-modes.html">&lt;div class=&quot;tutorial-body&quot;&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; Browsing the web, reading newspapers,
    watching television, if you do any these then you are familiar 
    with image blending.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; Blending essentially allows you to
    combine two different layers together to create a new layer,
    typically we combine an image and a colour, however our options are
    not just limited to colours and images.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; Blending is not a new technique, it is however 
    relatively novel in web design. With browser support on the rise, 
    &lt;span class=&quot;code-font&quot;&gt;background-blend-modes&lt;/span&gt; have featured heavily throughout
    sites such as &lt;span class=&quot;underline-definition&quot;&gt;
      &lt;a href=&quot;https://fantasy.premierleague.com/&quot;&gt; 
        Fantasy Premier League 
      &lt;/a&gt;
    &lt;/span&gt; and
    &lt;span class=&quot;underline-definition&quot;&gt;
    &lt;a href=&quot;https://www.spotify.com/ie/&quot;&gt; Spotify&lt;/a&gt;
    &lt;/span&gt;.
  &lt;/p&gt;
 
  &lt;div class='reference-image'&gt;
    &lt;img src=&quot;../img/fantasy-football.jpg&quot;&gt;
  &lt;/div&gt;
  
  &lt;h4 class=&quot;tutorial-section-heading&quot;&gt; Hello,
    &lt;span class=&quot;code-font&quot;&gt;background-blend-mode&lt;/span&gt;
  &lt;/h4&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; With browser support at over
    75% with the excluding internet explorer and edge. The benefits of
    using the &lt;span class=&quot;code-font&quot;&gt;background-blend-mode&lt;/span&gt; now
    outweigh the risks of encountering an unsupported browser.
  &lt;/p&gt;
 
  &lt;h4 class=&quot;tutorial-section-heading&quot;&gt; Getting started &lt;/h4&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; Before creating
    &lt;span class=&quot;code-font&quot;&gt;background-blends&lt;/span&gt;take time to
    familiarise yourself with these terms as they will feature heavily
    throughout.
    &lt;span class=&quot;code-font&quot;&gt;Destination&lt;/span&gt;,
    &lt;span class=&quot;code-font&quot;&gt;Source&lt;/span&gt;,
    &lt;span class=&quot;code-font&quot;&gt;Backdrop&lt;/span&gt;
  &lt;/p&gt;
  &lt;div class=&quot;definition-wrapper&quot;&gt;
    &lt;table class=&quot;definition-list&quot;&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Destination:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt;Bottom layer usually a colour or gradient&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Source:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt;Top layer usually an image&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Backdrop:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt;The area below the source, this is where the blending occurs&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/div&gt;

  &lt;h4 class=&quot;tutorial-section-heading&quot;&gt; The blend types &lt;/h4&gt;
  &lt;div class=&quot;blend-type&quot;&gt;
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;normal&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;This is the default attribute which specifies no blending. The blending formula simply selects the source color.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;multiply&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;The source color is multiplied by the destination color and replaces the destination. The resultant color is always at least as dark as either the source or destination color. Multiplying any color with black results in black. Multiplying any color with white preserves the original color.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;screen&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Multiplies the complements of the backdrop and source color values, then complements the result. The result color is always at least as light as either of the two constituent colors. Screening any color with white produces white; screening with black leaves the original color unchanged. The effect is similar to projecting multiple photographic slides simultaneously onto a single screen&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;overlay&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Multiplies or screens the colors, depending on the backdrop color value. Source colors overlay the backdrop while preserving its highlights and shadows. The backdrop color is not replaced but is mixed with the source color to reflect the lightness or darkness of the backdrop.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;darken&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Selects the darker of the backdrop and source colors. The backdrop is replaced with the source where the source is darker otherwise, it is left unchanged.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;lighten&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Selects the lighter of the backdrop and source colors. The backdrop is replaced with the source where the source is lighter otherwise, it is left unchanged.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;color-dodge&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Brightens the backdrop color to reflect the source color Painting with black produces no changes.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;color-burn&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Darkens the backdrop color to reflect the source color. Painting with white produces no change&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;hard-light&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Multiplies or screens the colors, depending on the source color value. The effect is similar to shining a harsh spotlight on the backdrop.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;soft-light&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Darkens or lightens the colors, depending on the source color value. The effect is similar to shining a diffused spotlight on the backdrop.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;difference&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Subtracts the darker of the two constituent colors from the lighter color. Painting with white inverts the backdrop color painting with black produces no change.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;exclusion&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Produces an effect similar to that of the Difference mode but lower in contrast. Painting with white inverts the backdrop color, painting with black produces no change.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;hue&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Creates a color with the hue of the source color and the saturation and luminosity of the backdrop color.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;saturation&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Creates a color with the saturation of the source color and the hue and luminosity of the backdrop color. Painting with this mode in an area of the backdrop that is a pure gray (no saturation) produces no change.&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;color&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Creates a color with the hue and saturation of the source color and the luminosity of the backdrop color. This preserves the gray levels of the backdrop and is useful for coloring monochrome images or tinting color images&lt;/p&gt;
    
    
    
    &lt;h5 class=&quot;blend-list-title&quot;&gt;luminosity&lt;/h5&gt;
    &lt;p class=&quot;blend-list-description&quot;&gt;Creates a color with the hue and saturation of the source color and the luminosity of the backdrop color. This produces an inverse effect to that of the Color mode.&lt;/p&gt;
    
    
    &lt;a class=&quot;author-link&quot; href='https://drafts.fxtf.org/compositing-1/#blending'&gt;
      -per W3C
    &lt;/a&gt;
  &lt;/div&gt;

  &lt;h4 class=&quot;tutorial-section-heading&quot;&gt; Syntax &lt;/h4&gt;
  &lt;div class='code-container'&gt;
&lt;pre class='code code-css'&gt;&lt;code&gt;.example-hero {
  background: url('../img/bg44.jpg') #6534ff;
  background-repeat: no-repeat;
  background-size: cover;
  background-blend-mode: 'normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue |saturation | color | luminosity';
}&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  
  &lt;h4 class=&quot;tutorial-section-heading&quot;&gt; Building our own 
  &lt;span class=&quot;code-font&quot;&gt;background-blend&lt;/span&gt; &lt;/h4&gt;
  &lt;div class=&quot;example-post&quot;&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;Starting with the &lt;span class=&quot;code-font&quot;&gt;HTML&lt;/span&gt;&lt;/p&gt;
    
    &lt;div class=&quot;code-container&quot;&gt;
      &lt;pre class=&quot;code code-html&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;example-hero&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p class=&quot;tutorial-paragraph&quot;&gt; For the 
      &lt;span class=&quot;code-font&quot;&gt;Destination&lt;/span&gt;
      this &lt;span class=&quot;code-font&quot;&gt;background-color&lt;/span&gt; will do,
      &lt;span class=&quot;box&quot;&gt;&lt;/span&gt;  and for the
      &lt;span class=&quot;code-font&quot;&gt;Source&lt;/span&gt; we can use the this image
    &lt;/p&gt;
  &lt;/div&gt;
  
  &lt;div class=&quot;example-hero&quot;&gt; &lt;/div&gt;
  
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; Selecting a
    &lt;span class=&quot;code-font&quot;&gt;background-blend-mode&lt;/span&gt; that fits
    your design is often a frustrating endeavour.
    To make my life easier, I like to animate the
    &lt;span class=&quot;code-font&quot;&gt;background-blend-modes&lt;/span&gt;.
  &lt;/p&gt;
  
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
     When creating the animation, each blend should be given the
    same amount of time over the image. To achieve this
    divide the total number of blend types by 100.
  &lt;/p&gt;
 
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    &lt;span class=&quot;code-font&quot;&gt; 100 / 16 = 6.25%&lt;/span&gt;
  &lt;/p&gt;
 
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; This means that each
   &lt;span class=&quot;code-font&quot;&gt;background-blend-mode&lt;/span&gt; will be given
    6.25% of the full animation. Next we must decide on
    how long we want each blend to be applied for.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; There are 16 &lt;span class=&quot;code-font&quot;&gt;background-blend-modes&lt;/span&gt;.
    If each blend were to applied for 3.5s long, then our total duration would be 
    56s.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    &lt;span class=&quot;code-font&quot;&gt;16 * 3.5s = 56s &lt;/span&gt;
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;We know we have 16
  &lt;span class=&quot;code-font&quot;&gt;background-blend-modes&lt;/span&gt;, we want
  each blend to be applied for 3.5s each and the animation will run
  for 56s.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; Next we need to alternate between blends using 
    &lt;span class=&quot;code-font&quot;&gt;CSS Keyframes&lt;/span&gt;.
  &lt;/p&gt;
  &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;&lt;span class=&quot;keyframe&quot;&gt;@keyframes&lt;/span&gt; blendTransition {
  0% { background-blend-mode: normal; }
  6.25% {background-blend-mode: multiply; }
  12.5% { background-blend-mode: screen; }
  18.75% { background-blend-mode: overlay; }
  25% { background-blend-mode: darken; }
  31.25% { background-blend-mode: lighten; }
  37.5% { background-blend-mode: color-dodge; }
  43.75% { background-blend-mode: color-burn; }
  50% { background-blend-mode: hard-light; }
  56.25% { background-blend-mode: soft-light; }
  62.5% { background-blend-mode: difference; }
  68.75% { background-blend-mode: exclusion; }
  75% { background-blend-mode: hue; }
  81.25% { background-blend-mode: saturation; }
  87.5% { background-blend-mode: color; }
  93.75% { background-blend-mode: luminosity; }
  100% {background-blend-mode: normal;}
}&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
 
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; I like to print the 
    &lt;span class=&quot;code-font&quot;&gt;blend-mode&lt;/span&gt; on the screen.
    To do this use the
    &lt;span class=&quot;code-font&quot;&gt;::after&lt;/span&gt; selector to fetch the blend name.
  &lt;/p&gt;
  
  &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-html&quot;&gt;&lt;code&gt;&amp;lt;div class=&quot;example-hero&quot;&amp;gt;
 &amp;lt;div class=&quot;caption&quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;.caption {
  background-color: #fff;
  bottom: 0;
  color: #6534ff;
  font-family: $lora;
  font-size: 20px;
  left: 0;
  padding: 12px;
  position: absolute;
  text-align: center;
  z-index: 2;

  &amp;::after {
  animation: blend 56s ease infinite;
  color: #6534ff;
  content: '';
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;&lt;span class=&quot;keyframe&quot;&gt;@keyframes&lt;/span&gt; blendType {
  0% { content: 'normal';}
  6.25% { content: 'multiply';}
  12.5% { content: 'screen';}
  18.75% { content: 'overlay';}
  25% { content: 'darken';}
  31.25% { content: 'lighten';}
  37.5% { content: 'color-dodge';}
  43.75% { content: 'color-burn';}
  50% { content: 'hard-light';}
  56.25% { content: 'soft-light';}
  62.5% { content: 'difference';}
  68.75% { content: 'exclusion';}
  75% { content: 'hue';}
  81.25% { content: 'saturation';}
  87.5% { content: 'color'; }
  93.75% { content: 'luminosity';}
  100% {content: 'unset';}
}&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;

  &lt;div class=&quot;example-hero-container&quot;&gt;
    &lt;div class=&quot;caption&quot;&gt;&lt;/div&gt;
  &lt;/div&gt;

  &lt;div class=&quot;example-post&quot;&gt;
  &lt;h4 class=&quot;tutorial-section-heading&quot;&gt; Multiple images &lt;/h4&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;Blending can also be used with more than one
    &lt;span class=&quot;code-font&quot;&gt;Source&lt;/span&gt;.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; If you have used multiple
    &lt;span class=&quot;code-font&quot;&gt;background-images&lt;/span&gt; before,
    you will know that you can style each image individually, the same principle
    also applies here.
  &lt;/p&gt;

  &lt;p class=&quot;tutorial-paragraph&quot;&gt; This means you have the ability
    to assign a &lt;span class=&quot;code-font&quot;&gt;background-blend&lt;/span&gt;
    per each &lt;span class=&quot;code-font&quot;&gt;background-image&lt;/span&gt;.
  &lt;/p&gt;

  &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;.example-hero-double-blend {
  animation: multipleBlendTransition 56s infinite;
  background-image: url('../img/bg44.jpg'), url('../img/bg13.jpg')
  background-color: lighten(#6534ff, 25%);
  background-repeat: no-repeat;
  background-size: cover;
  background-blend-mode: screen, darken;
  box-sizing: border-box;
  display: flex;
  height: 220px;
  justify-content: center;
  margin: 20px auto;
  overflow: hidden;
  padding: 20px 0;
  width: 100%;
}&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;

  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    As you can see we have passed two images, we have also passed
    two &lt;span class=&quot;code-font&quot;&gt;background-blend-modes&lt;/span&gt;
  &lt;/p&gt;

  &lt;div class=&quot;example-hero-multiple-blend&quot;&gt;&lt;/div&gt;
&lt;/div&gt;  

  &lt;h4 class=&quot;tutorial-section-heading&quot;&gt; Play with code &lt;/h4&gt;
  &lt;div class=&quot;codepen-wrapper&quot;&gt;
    &lt;p data-height=&quot;265&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;qrPoaE&quot; data-default-tab=&quot;result&quot; data-user=&quot;andrewrock&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Hero Blend Modes&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/andrewrock/pen/qrPoaE/&quot;&gt;Hero Blend Modes&lt;/a&gt; by Andrew (&lt;a href=&quot;http://codepen.io/andrewrock&quot;&gt;@andrewrock&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
    &lt;script async src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;
  &lt;/div&gt;

&lt;/div&gt;</content><author><name></name></author><summary type="html">Browsing the web, reading newspapers, watching television, if you do any these then you are familiar with image blending. Blending essentially allows you to combine two different layers together to create a new layer, typically we combine an image and a colour, however our options are not just limited to colours and images. Blending is not a new technique, it is however relatively novel in web design. With browser support on the rise, background-blend-modes have featured heavily throughout sites such as Fantasy Premier League and Spotify . Hello, background-blend-mode With browser support at over 75% with the excluding internet explorer and edge. The benefits of using the background-blend-mode now outweigh the risks of encountering an unsupported browser. Getting started Before creating background-blendstake time to familiarise yourself with these terms as they will feature heavily throughout. Destination, Source, Backdrop Destination: Bottom layer usually a colour or gradient Source: Top layer usually an image Backdrop: The area below the source, this is where the blending occurs</summary></entry><entry><title type="html">:not() selector</title><link href="http://github.com/pages/Andrewrock/not-selector.html" rel="alternate" type="text/html" title=":not() selector" /><published>2017-03-27T00:00:00+01:00</published><updated>2017-03-27T00:00:00+01:00</updated><id>http://github.com/pages/Andrewrock/not-selector</id><content type="html" xml:base="http://github.com/pages/Andrewrock/not-selector.html">&lt;div class=&quot;tutorial-body&quot;&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; The &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt;
    selector may be one of the least used &lt;span class=&quot;code-font&quot;&gt;css&lt;/span&gt;
    selectors, however, knowing when and how to use it can save a lot of time.
   &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt; can be used with any regular selector such as 
  &lt;/p&gt;

  &lt;ul class=&quot;simple-list&quot;&gt;
    &lt;li&gt;
      &lt;p&gt;Type selectors (e.g
        &lt;span class=&quot;code-font&quot;&gt;p&lt;/span&gt;,
        &lt;span class=&quot;code-font&quot;&gt;button&lt;/span&gt;,
        &lt;span class=&quot;code-font&quot;&gt;pre&lt;/span&gt;)
      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;p&gt;Class selectors (e.g
      &lt;span class=&quot;code-font&quot;&gt;.header&lt;/span&gt;,
      &lt;span class=&quot;code-font&quot;&gt;.footer&lt;/span&gt;,
      &lt;span class=&quot;code-font&quot;&gt;.nav&lt;/span&gt;)
    &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;p&gt;ID selector (e.g
      &lt;span class=&quot;code-font&quot;&gt;#logo&lt;/span&gt;)
    &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;p&gt;Pseudo-class selectors (e.g
      &lt;span class=&quot;code-font&quot;&gt;:checked&lt;/span&gt;,
      &lt;span class=&quot;code-font&quot;&gt;:active&lt;/span&gt;)
    &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;p&gt;Attribute selector (e.g
      &lt;span class=&quot;code-font&quot;&gt;:[type=&quot;submit&quot;]&lt;/span&gt;)
    &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;

  
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;To use the &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt;
  you pass an argument to the selector. The &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt;
  will then apply the styling rules to all the elements except for the selector in its argument.
  &lt;/p&gt;

  &lt;div class=&quot;code-container&quot;&gt;
    &lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;:not(selector) {
 css declarations;
}
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  
  &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;li:not(.active) {
  /* will  style all list items except the list item with the class active */
}&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;


  &lt;p class=&quot;tutorial-paragraph&quot;&gt; The &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt; is not
    without it's caveats. The argument passed to &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt; cannot, 
    be a pseudo-element (eg as &lt;span class=&quot;code-font&quot;&gt;:first-line&lt;/span&gt;
    and &lt;span class=&quot;code-font&quot;&gt;:first-letter&lt;/span&gt; etc).
  &lt;/p&gt;
  
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;You may have noticed that you can apply
    &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt; with a pseudo-class but not a pseudo-element.
    For information on the difference between psuedo-classes and psuedo-elements
    click
    &lt;span class=&quot;underline-definition&quot;&gt;
      &lt;a href=&quot;http://www.d.umn.edu/~lcarlson/csswork/selectors/pseudo_dif.html&quot;&gt;
        here
      &lt;/a&gt;
    &lt;/span&gt;
  &lt;/p&gt;
  
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;It is also possible to chain&lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt; selector
    with other &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt; selectors. 
    E.g. the following will match all articles except the one with a class of
    &lt;span class=&quot;code-font&quot;&gt;active&lt;/span&gt;, and then will filter out the list 
    item that is the last item.
  &lt;/p&gt;

  &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;li:not(.active):not(:last-of-type) {
  /* style list items that are not active or last */
}
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;

  &lt;h2 class=&quot;tutorial-section-heading&quot;&gt;Alphabet &amp;
    &lt;span class=&quot;code-font&quot;&gt; :not()&lt;/span&gt;
  &lt;/h2&gt;
  
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    As mentioned before, the &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt; selector matches the element that 
    is not represented by the selector in its argument. We can use the alphabet to illustrate the
    power of the &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt;. Consider the following
  &lt;/p&gt;
  
  &lt;div class=&quot;alphabet-container&quot;&gt;
    &lt;ul class=&quot;alphabet&quot;&gt;
      &lt;li&gt;a&lt;/li&gt;
      &lt;li&gt;b&lt;/li&gt;
      &lt;li&gt;c&lt;/li&gt;
      &lt;li&gt;d&lt;/li&gt;
      &lt;li&gt;e&lt;/li&gt;
      &lt;li&gt;f&lt;/li&gt;
      &lt;li&gt;g&lt;/li&gt;
      &lt;li&gt;h&lt;/li&gt;
      &lt;li&gt;i&lt;/li&gt;
      &lt;li&gt;j&lt;/li&gt;
      &lt;li&gt;k&lt;/li&gt;
      &lt;li&gt;l&lt;/li&gt;
      &lt;li&gt;m&lt;/li&gt;
      &lt;li&gt;n&lt;/li&gt;
      &lt;li&gt;o&lt;/li&gt;
      &lt;li&gt;p&lt;/li&gt;
      &lt;li&gt;q&lt;/li&gt;
      &lt;li&gt;r&lt;/li&gt;
      &lt;li&gt;s&lt;/li&gt;
      &lt;li&gt;t&lt;/li&gt;
      &lt;li&gt;u&lt;/li&gt;
      &lt;li&gt;v&lt;/li&gt;
      &lt;li&gt;y&lt;/li&gt;
      &lt;li&gt;x&lt;/li&gt;
      &lt;li&gt;y&lt;/li&gt;
      &lt;li&gt;z&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p class=&quot;tutorial-paragraph&quot;&gt; Now let's say you want to show only the vowels.
      You can achieve this by adding &lt;span class=&quot;code-font&quot;&gt;vowel&lt;/span&gt;
      class to each vowel in the list of letters. &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt;
      selector will check against this class before styling the letters.
    &lt;/p&gt;

    &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;.alphabet &gt; li:not(.vowel) {
  display: none;
}&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    
    &lt;ul class=&quot;alphabet vowel&quot;&gt;
      &lt;li class=&quot;vowel&quot;&gt;a&lt;/li&gt;
      &lt;li&gt;b&lt;/li&gt;
      &lt;li&gt;c&lt;/li&gt;
      &lt;li&gt;d&lt;/li&gt;
      &lt;li class=&quot;vowel&quot;&gt;e&lt;/li&gt;
      &lt;li&gt;f&lt;/li&gt;
      &lt;li&gt;g&lt;/li&gt;
      &lt;li&gt;h&lt;/li&gt;
      &lt;li class=&quot;vowel&quot;&gt;i&lt;/li&gt;
      &lt;li&gt;j&lt;/li&gt;
      &lt;li&gt;k&lt;/li&gt;
      &lt;li&gt;l&lt;/li&gt;
      &lt;li&gt;m&lt;/li&gt;
      &lt;li&gt;n&lt;/li&gt;
      &lt;li class=&quot;vowel&quot;&gt;o&lt;/li&gt;
      &lt;li&gt;p&lt;/li&gt;
      &lt;li&gt;q&lt;/li&gt;
      &lt;li&gt;r&lt;/li&gt;
      &lt;li&gt;s&lt;/li&gt;
      &lt;li&gt;t&lt;/li&gt;
      &lt;li class=&quot;vowel&quot;&gt;u&lt;/li&gt;
      &lt;li&gt;v&lt;/li&gt;
      &lt;li&gt;y&lt;/li&gt;
      &lt;li&gt;x&lt;/li&gt;
      &lt;li&gt;y&lt;/li&gt;
      &lt;li&gt;z&lt;/li&gt;
    &lt;/ul&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; You can only us &lt;span class=&quot;code-font&quot;&gt;:not()&lt;/span&gt; to 
      change the &lt;span class=&quot;code-font&quot;&gt;background-color&lt;/span&gt; for vowels only.
    &lt;/p&gt;
    &lt;div class=&quot;code-container&quot;&gt;
    &lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;.alphabet-test &gt; li {
      background-color: $nav-link-color;
      &amp;:not(.vowel) {
      background-color: grey;
      color: $body-color;
    }
  }&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;ul class=&quot;alphabet-test&quot;&gt;
      &lt;li class=&quot;vowel&quot;&gt;a&lt;/li&gt;
      &lt;li&gt;b&lt;/li&gt;
      &lt;li&gt;c&lt;/li&gt;
      &lt;li&gt;d&lt;/li&gt;
      &lt;li class=&quot;vowel&quot;&gt;e&lt;/li&gt;
      &lt;li&gt;f&lt;/li&gt;
      &lt;li&gt;g&lt;/li&gt;
      &lt;li&gt;h&lt;/li&gt;
      &lt;li class=&quot;vowel&quot;&gt;i&lt;/li&gt;
      &lt;li&gt;j&lt;/li&gt;
      &lt;li&gt;k&lt;/li&gt;
      &lt;li&gt;l&lt;/li&gt;
      &lt;li&gt;m&lt;/li&gt;
      &lt;li&gt;n&lt;/li&gt;
      &lt;li class=&quot;vowel&quot;&gt;o&lt;/li&gt;
      &lt;li&gt;p&lt;/li&gt;
      &lt;li&gt;q&lt;/li&gt;
      &lt;li&gt;r&lt;/li&gt;
      &lt;li&gt;s&lt;/li&gt;
      &lt;li&gt;t&lt;/li&gt;
      &lt;li class=&quot;vowel&quot;&gt;u&lt;/li&gt;
      &lt;li&gt;v&lt;/li&gt;
      &lt;li&gt;y&lt;/li&gt;
      &lt;li&gt;x&lt;/li&gt;
      &lt;li&gt;y&lt;/li&gt;
      &lt;li&gt;z&lt;/li&gt;
    &lt;/ul&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;You can play with the code here
     &lt;span class=&quot;underline-definition&quot;&gt;
       &lt;a href=&quot;http://codepen.io/andrewrock/pen/aJagPm&quot;&gt;Here&lt;/a&gt;
     &lt;/span&gt;
    &lt;/p&gt;
  &lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">The :not() selector may be one of the least used css selectors, however, knowing when and how to use it can save a lot of time. :not() can be used with any regular selector such as</summary></entry><entry><title type="html">Light &amp;amp; Dark, Shade &amp;amp; Tint</title><link href="http://github.com/pages/Andrewrock/ligthen-darken.html" rel="alternate" type="text/html" title="Light &amp; Dark, Shade &amp; Tint" /><published>2017-03-26T00:00:00+00:00</published><updated>2017-03-26T00:00:00+00:00</updated><id>http://github.com/pages/Andrewrock/ligthen-darken</id><content type="html" xml:base="http://github.com/pages/Andrewrock/ligthen-darken.html">&lt;div class=&quot;tutorial-body&quot;&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; Thinking back to school, I can remember
    I was never any good at art, I was mostly happy just
    sitting in a double art class and not a French class.
    Just as the history teacher would drill into you
    that 'In 1492 Columbus sailed the ocean blue.', Our art teacher would
    encourage the use of the colour to tell a story, influence moods and to
    serve as a bridge to something new.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; Ten years have passed since those art
    classes, the relationship between colour and the web has remained stagnant, with
    limited choices available before having to turn to JavaScript or relying
    on the support of a polyfill library.
  &lt;/p&gt;

  &lt;p class=&quot;tutorial-paragraph&quot;&gt; Enter &lt;span class=&quot;code-font&quot;&gt;mix-blend-mode&lt;/span&gt;, we now
    have the ability to easily manipulate a single colour into a plethora of different
    colours.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;To begin we use one colour, setting this
    as the base colour. E.g. &lt;span class=&quot;code-font purple&quot;&gt;#6534ff&lt;/span&gt;
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; &lt;span class=&quot;code-font&quot;&gt;Sass&lt;/span&gt;
    provides plenty of options out of the box allowing us to create unique
    and different colour combinations with ease. We will be looking at the 
    three most common colour functions
  &lt;/p&gt;
  &lt;ul class=&quot;simple-list&quot;&gt;
    &lt;li&gt;&lt;p&gt;Shade &amp; Tint&lt;/p&gt;&lt;/li&gt;
    &lt;li&gt;&lt;p&gt;Lighten &amp; Darken&lt;/p&gt;&lt;/li&gt;
    &lt;li&gt;&lt;p&gt;Multiple colours&lt;/p&gt;&lt;/li&gt;
  &lt;/ul&gt;
  &lt;div class=&quot;color-functions&quot;&gt;
    &lt;h4 class=&quot;tutorial-section-heading&quot;&gt;Shade &amp; Tint&lt;/h4&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; To use the &lt;span class=&quot;code-font&quot;&gt;
      tint&lt;/span&gt; and &lt;span class=&quot;code-font&quot;&gt; shade&lt;/span&gt;
      we use the &lt;span class=&quot;code-font&quot;&gt;mix()&lt;/span&gt; function.
      mixing the colour with white (&lt;span class=&quot;code-font&quot;&gt;tint&lt;/span&gt;)
      and black (&lt;span class=&quot;code-font&quot;&gt;shade&lt;/span&gt;)
    &lt;/p&gt;
    &lt;div class='code-container'&gt;
&lt;pre class='code code-css'&gt;&lt;code&gt;$body-color: #282828;
$grey: #999;
  
  @function shade($color, $percentage) {
    @return mix($body-color, $color, $percentage);
  }

  @function tint($color, $percentage) {
    @return mix($white, $color, $percentage);
}&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p class=&quot;tutorial-paragraph&quot;&gt; We name each function 
      &lt;span class=&quot;code-font&quot;&gt;shade&lt;/span&gt; and &lt;span class=&quot;code-font&quot;&gt;tint&lt;/span&gt;
      so it is easy to differentiate between them.
    &lt;/p&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;There are several reasons to use 
      &lt;span class=&quot;code-font&quot;&gt; tint&lt;/span&gt; and
      &lt;span class=&quot;code-font&quot;&gt; shade&lt;/span&gt;. It is not outside the realms of possibility
      to generate a whole palette from one colour using the
      &lt;span class=&quot;code-font&quot;&gt;shade&lt;/span&gt; and &lt;span class=&quot;code-font&quot;&gt;tint&lt;/span&gt; functions.
    &lt;/p&gt;
    &lt;div class='code-container'&gt;
&lt;pre class='code code-css'&gt;&lt;code&gt;@function shade($color, $percentage) {
  @return mix($body-color, $color, $percentage);
}
  
 $body-color: #282828;
 $grey: #999;
 $purple: #6534ff;

   .tint li
   .shade li {
     background: $blue;
     flex: 1 0 auto;
   }

 .tint li {
 $tint-num: 6;
 
  @for $i from 1 through $shade-num {
   &amp;:nth-of-type(#{$i}) {
     background-color: tint($purple, ($i * 10%));
   }
  }
}
  
 .shade li {
  $shade-num: 6;

  @for $i from 1 through $shade-num {
   &amp;:nth-of-type(#{$i}) {
     background-color: shade($purple, ($i * 10%));
   }
 }
}&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    
    
    &lt;h2 class=&quot;code-font&quot;&gt; Shade &lt;/h2&gt;
    &lt;ul class=&quot;shade&quot;&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;h2 class=&quot;code-font&quot;&gt; Tint &lt;/h2&gt;
    &lt;ul class=&quot;tint&quot;&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; Starting at 0 we increase the amount of
      &lt;span class=&quot;code-font&quot;&gt; tint&lt;/span&gt; and &lt;span class=&quot;code-font&quot;&gt; shade&lt;/span&gt;
      in increments of ten until we reach 100.
    &lt;/p&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;To increase the increment every item, we
      first need to need know how many increments are needed. In this case it is
      six. Using the loop we cycle through each and apply our desired
      &lt;span class=&quot;code-font&quot;&gt;shade&lt;/span&gt; or &lt;span class=&quot;code-font&quot;&gt;tint&lt;/span&gt;
    &lt;/p&gt;
    &lt;div class='code-container'&gt;
&lt;pre class='code code-css'&gt;&lt;code&gt;
  $shade-num: 6;
  $tint-num: 6;

  @for $i from 1 through $shade-num {
    &amp;:nth-of-type(#{$i}) {
      background-color: shade($purple, ($i * 10%));
   }
 }

  @for $i from 1 through $shade-num {
    &amp;:nth-of-type(#{$i}) {
      background-color: tint($purple, ($i * 10%));
    }
}&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; If you are questioning when to use
      either function.
    &lt;/p&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;
      &lt;span class=&quot;code-font&quot;&gt;shade:&lt;/span&gt; mixture of a colour with
      black, which reduces lightness.
    &lt;/p&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;
      &lt;span class=&quot;code-font&quot;&gt;tint:&lt;/span&gt; mixture of a colour with
      white, which increases lightness
    &lt;/p&gt;
    &lt;h4 class=&quot;tutorial-section-heading&quot;&gt;Possible blend combinations&lt;/h4&gt;
    &lt;ul class=&quot;tint-shade&quot;&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
    
    
    &lt;h4 class=&quot;tutorial-section-heading&quot;&gt;lighten &amp; darken&lt;/h4&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; Often, it is just a single
      shade or highlight that is desired. To achieve this
      we use the &lt;span class=&quot;code-font&quot;&gt;Sass&lt;/span&gt; function for
      &lt;span class=&quot;code-font&quot;&gt;darken&lt;/span&gt; and
      &lt;span class=&quot;code-font&quot;&gt;lighten&lt;/span&gt;. 
    &lt;/p&gt;
    &lt;div class='code-container'&gt;
&lt;pre class='code code-css'&gt;&lt;code&gt;darken($color, 10%);
lighten($color, 10%);&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; As the &lt;span class=&quot;code-font&quot;&gt;lighten&lt;/span&gt;
      and &lt;span class=&quot;code-font&quot;&gt;darken&lt;/span&gt; functions can quickly result
      in solid white and solid black, try staying in the range of
      3-20%. &lt;span class=&quot;code-font&quot;&gt;Sass&lt;/span&gt; will produce an error if the
      percentage being passed in the function exceeds 100%. This is important
      especially if using a single colour for multiple items, or
      outputting an incremented value from a large amount of items.
    &lt;/p&gt;
    &lt;ul class=&quot;light-dark&quot;&gt;
      &lt;li&gt;Original colour&lt;/li&gt;
      &lt;li&gt;Lighten (2.5%)&lt;/li&gt;
      &lt;li&gt;Lighten (5%)&lt;/li&gt;
      &lt;li&gt;Lighten (7.5%)&lt;/li&gt;
      &lt;li&gt;Lighten (10%)&lt;/li&gt;
      &lt;li&gt;Lighten (12.5%)&lt;/li&gt;
      &lt;li&gt;Original colour&lt;/li&gt;
      &lt;li&gt;Darken (2.5%)&lt;/li&gt;
      &lt;li&gt;Darken (5%)&lt;/li&gt;
      &lt;li&gt;Darken (7.5%)&lt;/li&gt;
      &lt;li&gt;Darken (10%)&lt;/li&gt;
      &lt;li&gt;Darken (12.5%)&lt;/li&gt;
    &lt;/ul&gt;
    &lt;h4 class=&quot;tutorial-section-heading&quot;&gt;Possible blend combinations&lt;/h4&gt;
    &lt;ul class=&quot;light-dark-mix&quot;&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
    &lt;h4 class=&quot;tutorial-section-heading&quot;&gt;&lt;span class=&quot;code-font&quot;&gt;tint&lt;/span&gt;,
      &lt;span class=&quot;code-font&quot;&gt;shade&lt;/span&gt;,
      &lt;span class=&quot;code-font&quot;&gt;darken&lt;/span&gt;
      &lt;span class=&quot;code-font&quot;&gt;lighten&lt;/span&gt;
    &lt;/h4&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;
      Lets put everything together
      &lt;span class=&quot;code-font&quot;&gt;tint&lt;/span&gt;,
      &lt;span class=&quot;code-font&quot;&gt;lighten&lt;/span&gt;,
      &lt;span class=&quot;code-font&quot;&gt;shade&lt;/span&gt; and
      &lt;span class=&quot;code-font&quot;&gt;darken&lt;/span&gt;.
    &lt;/p&gt;
    &lt;ul class=&quot;all-together&quot;&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
    
    
    &lt;h4 class=&quot;tutorial-section-heading&quot;&gt;Multiple colours&lt;/h4&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; So far we have worked
      with a singular colour &lt;span class=&quot;code-font purple&quot;&gt;#6534ff&lt;/span&gt;.
      We also have the ability to use multiple colours, Let's use
      &lt;span class=&quot;code-font purple&quot;&gt;#6534ff&lt;/span&gt;
      &lt;span class=&quot;code-font pink&quot;&gt;#fc0152&lt;/span&gt;
    &lt;/p&gt;
    
    &lt;ul class=&quot;combined&quot;&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
    
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; As you can see from the code below, the
      approach is similar to using a single colour.
    &lt;/p&gt;
    &lt;div class='code-container'&gt;
&lt;pre class='code code-css'&gt;&lt;code&gt;$purple: #6534ff;
$pink: #fc0152;
  
 .combined li {
   background: $nav-link-color;
   flex: 1 0 auto;
   $combine-num: 6;

 @for $i from 1 through $combine-num {
   &amp;:nth-of-type(#{$i}) {
    background-color: mix(darken($nav-link-color,($i * 7.5%)),lighten($pink,($i * 10%)));
   }
 }á
}&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    
    &lt;h4 class=&quot;code-font&quot;&gt; lighten &amp; darken &lt;/h4&gt;
    &lt;ul class=&quot;combined-blend&quot;&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
    
    &lt;h4 class=&quot;code-font&quot;&gt; tint &amp; shade &lt;/h4&gt;
    &lt;ul class=&quot;combined-blend darken-lighten&quot;&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
    
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;We already compared the differences
      between &lt;span class=&quot;code-font&quot;&gt;tint&lt;/span&gt;,
      &lt;span class=&quot;code-font&quot;&gt;shade&lt;/span&gt;,
      &lt;span class=&quot;code-font&quot;&gt;lighten&lt;/span&gt; and
      &lt;span class=&quot;code-font&quot;&gt;darken&lt;/span&gt; with a single colour, now let's
      compare with two colours.
    &lt;/p&gt;
    &lt;ul class=&quot;all-together-two&quot;&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
    
    &lt;div class='code-container'&gt;
&lt;pre class='code code-css'&gt;&lt;code&gt;.all-together-two li {
$tint-num: 10;
$darken-num: 20;
background-blend-mode: overlay;
flex: 1 0 20%;

  @for $i from 1 through $tint-num {
   &amp;:nth-of-type(#{$i}) {
    background: $image-one mix(tint($nav-link-color,($i * 5%)),shade($pink,($i * 2%))) center center / cover no-repeat;
   }
  }

  @for $i from 11 through $darken-num {
   &amp;:nth-of-type(#{$i}) {
    background: $image-one mix(darken($nav-link-color,($i * 5%)),lighten($pink,($i * 2%))) center center / cover no-repeat;
   }
  }
}&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; For the ultimate comparison, Let's combine
      all the effects together
    &lt;/p&gt;
    &lt;ul class=&quot;all-together-all&quot;&gt;
      &lt;li&gt;tint&lt;/li&gt;
      &lt;li&gt;tint&lt;/li&gt;
      &lt;li&gt;tint&lt;/li&gt;
      &lt;li&gt;tint&lt;/li&gt;
      &lt;li&gt;tint&lt;/li&gt;
      &lt;li&gt;lighten&lt;/li&gt;
      &lt;li&gt;lighten&lt;/li&gt;
      &lt;li&gt;lighten&lt;/li&gt;
      &lt;li&gt;lighten&lt;/li&gt;
      &lt;li&gt;lighten&lt;/li&gt;
      &lt;li&gt;shade&lt;/li&gt;
      &lt;li&gt;shade&lt;/li&gt;
      &lt;li&gt;shade&lt;/li&gt;
      &lt;li&gt;shade&lt;/li&gt;
      &lt;li&gt;shade&lt;/li&gt;
      &lt;li&gt;darken&lt;/li&gt;
      &lt;li&gt;darken&lt;/li&gt;
      &lt;li&gt;darken&lt;/li&gt;
      &lt;li&gt;darken&lt;/li&gt;
      &lt;li&gt;darken&lt;/li&gt;
      &lt;li&gt;tint-shade&lt;/li&gt;
      &lt;li&gt;tint-shade&lt;/li&gt;
      &lt;li&gt;tint-shade&lt;/li&gt;
      &lt;li&gt;tint-shade&lt;/li&gt;
      &lt;li&gt;tint-shade&lt;/li&gt;
      &lt;li&gt;light-dark&lt;/li&gt;
      &lt;li&gt;light-dark&lt;/li&gt;
      &lt;li&gt;light-dark&lt;/li&gt;
      &lt;li&gt;light-dark&lt;/li&gt;
      &lt;li&gt;light-dark&lt;/li&gt;
      &lt;li&gt; original &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">Thinking back to school, I can remember I was never any good at art, I was mostly happy just sitting in a double art class and not a French class. Just as the history teacher would drill into you that 'In 1492 Columbus sailed the ocean blue.', Our art teacher would encourage the use of the colour to tell a story, influence moods and to serve as a bridge to something new. Ten years have passed since those art classes, the relationship between colour and the web has remained stagnant, with limited choices available before having to turn to JavaScript or relying on the support of a polyfill library.</summary></entry><entry><title type="html">Instafeed Tutorial</title><link href="http://github.com/pages/Andrewrock/recreating-instagram.html" rel="alternate" type="text/html" title="Instafeed Tutorial" /><published>2017-03-17T00:00:00+00:00</published><updated>2017-03-17T00:00:00+00:00</updated><id>http://github.com/pages/Andrewrock/recreating-instagram</id><content type="html" xml:base="http://github.com/pages/Andrewrock/recreating-instagram.html">&lt;div class=&quot;tutorial-body&quot;&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    With over 300 million daily images posted to instagram, it is
    the number one social network for sharing images and videos.
    This tutorial will show you how to display your instagram feed
    on your website.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    If you are more interested in the
    &lt;span class=&quot;code-font&quot;&gt;Sass&lt;/span&gt; then click
    &lt;span class=&quot;underline-definition&quot;&gt;
    &lt;a href=&quot;https://codepen.io/andrewrock/pen/MpVgpw&quot;&gt;Here&lt;/a&gt;&lt;/span&gt;
  &lt;/p&gt;
  &lt;h2 class=&quot;tutorial-section-heading&quot;&gt; Getting started &lt;/h2&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    To follow this demo you will need the following
    &lt;span class=&quot;underline-definition&quot;&gt;&lt;a href=&quot;http://instafeedjs.com/&quot;&gt; Instafeed.js &lt;/a&gt;&lt;/span&gt; 
    and
    &lt;span class=&quot;underline-definition&quot;&gt;&lt;a href=&quot;https://www.instagram.com/developer/&quot;&gt; Instagram developer access &lt;/a&gt;&lt;/span&gt;
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;Once you have downloaded
    &lt;span class=&quot;code-font&quot;&gt;instafeed&lt;/span&gt; place it your javascript 
    directory and reference it.
  &lt;/p&gt;
  &lt;div class=&quot;code-container&quot;&gt;
    &lt;pre class=&quot;code code-html&quot;&gt;&lt;code class=&quot;no-padding&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;js/instafeed.min.js&quot;&amp;gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; Then add it to the 
    &lt;span class=&quot;code-font&quot;&gt;html&lt;/span&gt;
  &lt;/p&gt;
  &lt;div class=&quot;code-container&quot;&gt;
    &lt;pre class=&quot;code code-html&quot;&gt;&lt;code class=&quot;no-padding&quot;&gt;&amp;lt;div id=&quot;instafeed-tutorial&quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  &lt;h2 class=&quot;tutorial-section-heading&quot;&gt; Instagram Developer &lt;/h2&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    Before you can access your photos you must first register your 
    application with Instagram.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    The following steps are to set up a developer account.
    Without developer access Instagram does not permit the retrieval of 
    images.
  &lt;/p&gt;
  &lt;ul class=&quot;simple-list&quot;&gt;
    &lt;li&gt;
      &lt;p&gt;Go to
        &lt;span class=&quot;underline-definition&quot;&gt;
        &lt;a href=&quot;https://www.instagram.com/developer/&quot;&gt; 
        Instagram developer portal
        &lt;/a&gt;
        &lt;/span&gt;
      &lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
      &lt;p&gt; Click the
        &lt;span class=&quot;underline-definition&quot;&gt;
        'Register Your Application'
        &lt;/span&gt;
        button.
      &lt;/p&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
  &lt;div class=&quot;definition-wrapper&quot;&gt;
    &lt;table class=&quot;definition-list&quot;&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Application Name:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p&gt;This can be anything,
            As long as it does not contain any of the following:
            ‘insta’, ‘gram’, ‘IG’ or ‘Instagram’ 
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Description:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p&gt;Best to keep this simple, e.g. &quot;Gallery for personal site&quot; 
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Company Name:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p&gt;Company name can be your name&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Website URL:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p&gt;This is the url of your website&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Valid Redirect URIs:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p&gt;For the purpose of this demo your sites URL will suffice
            nobody will be logging into your application as we are running 
            in Sandbox mode (see api docs).
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Privacy Policy:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p&gt;If you have a privacy policy include it here, if not just
            add your site URL.
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Contact Email:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p&gt;Add your email&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/div&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;Finally, switch to the Security tab and
    deselect the &lt;span class=&quot;tutorial-definition&quot;&gt;‘Disable implicit OAuth’&lt;/span&gt;
    checkbox, then hit Register.
  &lt;/p&gt;
  &lt;h2 class=&quot;tutorial-section-heading&quot;&gt; Connecting Instagram &lt;/h2&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; There are a number of steps involved 
    here, it may take one or two tries to get it all correct.
  &lt;/p&gt;
  &lt;div class=&quot;definition-wrapper&quot;&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;
      Next step is to get a 
      &lt;span class=&quot;code-font&quot;&gt;USER-ID&lt;/span&gt;, click
      &lt;span class=&quot;underline-definition&quot;&gt;
      &lt;a href=&quot;https://smashballoon.com/instagram-feed/find-instagram-user-id/&quot;&gt;
      here
      &lt;/a&gt;
      &lt;/span&gt;. You want to enter the username, the one you use to sign 
      in. Once you have your own ID keep it handy as you will need it soon.
    &lt;/p&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; To get your 
      &lt;span class=&quot;code-font&quot;&gt;CLIENT-ID&lt;/span&gt;, paste the following into 
      your browser 
    &lt;/p&gt;
    &lt;div class=&quot;code-container&quot;&gt;
      &lt;pre class=&quot;code code-html&quot;&gt;&lt;code&gt;https://api.instagram.com/oauth/authorize/?client_id=CLIENT-ID&amp;redirect_uri=REDIRECT-URI&amp;response_type=token&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;Now replace
      &lt;span class=&quot;code-font&quot;&gt;CLIENT-ID&lt;/span&gt; with the
      &lt;span class=&quot;code-font&quot;&gt;CLIENT-ID&lt;/span&gt; generated.
    &lt;/p&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt;
      Now replace &lt;span class=&quot;code-font&quot;&gt;REDIRECT-URI&lt;/span&gt;
      with the &lt;span class=&quot;code-font&quot;&gt;REDIRECT-URI&lt;/span&gt; that you 
      included when setting up.
    &lt;/p&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; Load the URL.&lt;/p&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; Once you have loaded the URL, your 
      &lt;span class=&quot;code-font&quot;&gt;ACCESS-TOKEN&lt;/span&gt; should be in the URL
    &lt;/p&gt;
    &lt;div class=&quot;code-container&quot;&gt;
      &lt;pre class=&quot;code code-html&quot;&gt;&lt;code&gt;'http://your-redirect-uri#access_token=ACCESS-TOKEN'&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
    &lt;p class=&quot;tutorial-paragraph&quot;&gt; Copy the 
      &lt;span class=&quot;code-font&quot;&gt;ACCESS-TOKEN&lt;/span&gt;
    &lt;/p&gt;
  &lt;/div&gt;
  &lt;h2 class=&quot;tutorial-section-heading&quot;&gt; Instafeed Options &lt;/h2&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; You now have everything needed to use 
    the &lt;span class=&quot;code-font&quot;&gt;instafeed&lt;/span&gt;, now let's briefly
    explore the API options, For detailed information about the API head 
    over to the &lt;span class=&quot;underline-definition&quot;&gt;
    &lt;a href=&quot;https://github.com/stevenschobert/instafeed.js&quot;&gt;Github page&lt;/a&gt;
    &lt;/span&gt;.
  &lt;/p&gt;
  &lt;div class=&quot;definition-wrapper&quot;&gt;
    &lt;table class=&quot;definition-list&quot;&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Resolution:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt; Three options:&lt;/p&gt;
          &lt;ul class=&quot;simple-list&quot;&gt;
            &lt;li&gt;thumbnail (default)
              &lt;span class=&quot;solid-definition&quot;&gt; 150 x 150 &lt;/span&gt;
            &lt;/li&gt;
            &lt;li&gt;low_resolution
              &lt;span class=&quot;solid-definition&quot;&gt; 306 x 306 &lt;/span&gt;
            &lt;/li&gt;
            &lt;li&gt;standard_resolution
              &lt;span class=&quot;solid-definition&quot;&gt; 612 x 612 &lt;/span&gt;
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Target&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt;
            Either the ID name or the DOM element itself where you want
            to add the images to.
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Template:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt;Allows us to use a custom 
            template to use for images, we 
            will be using the template to create our gallery
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt; Get: &lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt; There are a number of options here &lt;/p&gt;
          &lt;ul class=&quot;simple-list&quot;&gt;
            &lt;li&gt; popular (default) - Images from the popular page &lt;/li&gt;
            &lt;li&gt; tagged - Images with a specific tag. Use 
              &lt;span class=&quot;code-font&quot;&gt; tagName&lt;/span&gt; 
              to specify the tag.
            &lt;/li&gt;
            &lt;li&gt; location - Images from a location. Use
              &lt;span class=&quot;code-font&quot;&gt; locationId&lt;/span&gt; 
              to specify the location 
            &lt;/li&gt;
            &lt;li&gt; user - Images from a user. 
              &lt;span class=&quot;code-font&quot;&gt; Use userId&lt;/span&gt;
              to specify the user. 
            &lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;SortBy:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt; There are a number of options here &lt;/p&gt;
          &lt;ul class=&quot;simple-list&quot;&gt;
            &lt;li&gt;none (default) - As they come from Instagram. &lt;/li&gt;
            &lt;li&gt;most-recent&lt;/li&gt;
            &lt;li&gt;least-recent&lt;/li&gt;
            &lt;li&gt;most-liked&lt;/li&gt;
            &lt;li&gt;least-liked&lt;/li&gt;
            &lt;li&gt;most-commented&lt;/li&gt;
            &lt;li&gt;least-commented&lt;/li&gt;
          &lt;/ul&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Links:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt;Wrap the image in a link.&lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;Limit:&lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt;
            By default instagram photos will run in sandbox mode,
            This means that image retrieval is capped at a maximum of 
            twenty images,by adding a limit that is less than the 
            maximum twenty we can paginate through our images and reduce
            the initial page load.
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/div&gt;
  &lt;h2 class=&quot;tutorial-section-heading&quot;&gt; Advanced Options &lt;/h2&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; 
    There are a number of advanced options such as what to do before and 
    after images are returned.
  &lt;/p&gt;
  &lt;div class=&quot;definition-wrapper&quot;&gt;
    &lt;table class=&quot;definition-list&quot;&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt; Before: &lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt; Function called 
            before fetching images from Instagram 
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt; After: &lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt; Function called 
            when images have been added to the page.
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt; Success: &lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt; Function called
            when Instagram returns valid data.
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt; Error: &lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt; Function called
            when there is an error fetching images. 
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
        &lt;td&gt;
          &lt;p&gt;
            Filter:
          &lt;/p&gt;
        &lt;/td&gt;
        &lt;td&gt;
          &lt;p class=&quot;tutorial-paragraph&quot;&gt; Function used to exclude 
            images from your results, e.g Show only photos, videos
          &lt;/p&gt;
        &lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/div&gt;
  &lt;h2 class=&quot;tutorial-section-heading&quot;&gt; Putting it all together &lt;/h2&gt;
  &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;document.addEventListener(&quot;DOMContentLoaded&quot;, function() {
  
  var tutorialFeed = new Instafeed ({
  get: 'user',
  userId: '623597756',
  clientId: 'Client',
  target: 'tutorial-instafeed',
  accessToken: 'Access-Token',
  resolution: 'standard_resolution',
  sortBy: 'most-recent',
  limit: 9,
  template: '&amp;lt;div class=&quot;image-item insta-page&quot;&amp;gt;' +
  '&amp;lt;a class=&quot;image insta-image&quot; href=&quot;&amp;#123;&amp;#123;image&amp;#125;&amp;#125;&amp;gt;' +
  '&amp;lt;img alt=&quot;&amp;#123;&amp;#123;user.full_name&amp;#125;&amp;#125;&quot; src=&quot;&amp;#123;&amp;#123;image&amp;#125;&amp;#125;&amp;gt;' +
  '&amp;lt;div class=&quot;img-backdrop-tutorial&quot;&amp;gt;' +
  '&amp;lt;div class=&quot;insta-caption&quot;&amp;gt;' +
  '&amp;lt;p&amp;gt;&amp;#123;&amp;#123;caption&amp;#125;&amp;#125;&amp;lt;/p&amp;gt;' +
  '&amp;lt;/div&amp;gt;' +
  '&amp;lt;/div&amp;gt;' +
  '&amp;lt;div class=&quot;captions&quot;&amp;gt;' +
  '&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;' +
  '&amp;lt;/div&amp;gt;' +
  '&amp;lt;/a&amp;gt;' +
  '&amp;lt;/div&amp;gt;'

   });
    
   tutorialFeed.run();
   
});&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    Having briefly introduced the advanced 
    &lt;span class=&quot;code-font&quot;&gt;instafeed&lt;/span&gt; options, now let's explore
    how to use the &lt;span class=&quot;solid-definition&quot;&gt;Filter&lt;/span&gt;
    and the &lt;span class=&quot;solid-definition&quot;&gt;After&lt;/span&gt; functions.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    We are going to use the &lt;span class=&quot;solid-definition&quot;&gt;Filter&lt;/span&gt;
    function to only return images.
  &lt;/p&gt;
  &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;document.addEventListener(&quot;DOMContentLoaded&quot;, function() {

  var tutorialFeed = new Instafeed ({
  get: 'user',
  userId: '623597756',
  clientId: 'Client',
  target: 'tutorial-instafeed',
  accessToken: 'Access-Token',
  resolution: 'standard_resolution',
  sortBy: 'most-recent',
  limit: 9,
  template: '&amp;lt;div class=&quot;image-item insta-page&quot;&amp;gt;' +
  '&amp;lt;a class=&quot;image insta-image&quot; href=&quot;&amp;#123;&amp;#123;image&amp;#125;&amp;#125;&amp;gt;' +
  '&amp;lt;img alt=&quot;&amp;#123;&amp;#123;user.full_name&amp;#125;&amp;#125;&quot; src=&quot;&amp;#123;&amp;#123;image&amp;#125;&amp;#125;&amp;gt;' +
  '&amp;lt;div class=&quot;img-backdrop-tutorial&quot;&amp;gt;' +
  '&amp;lt;div class=&quot;insta-caption&quot;&amp;gt;' +
  '&amp;lt;p&amp;gt;&amp;#123;&amp;#123;caption&amp;#125;&amp;#125;&amp;lt;/p&amp;gt;' +
  '&amp;lt;/div&amp;gt;' +
  '&amp;lt;/div&amp;gt;' +
  '&amp;lt;div class=&quot;captions&quot;&amp;gt;' +
  '&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;' +
  '&amp;lt;/div&amp;gt;' +
  '&amp;lt;/a&amp;gt;' +
  '&amp;lt;/div&amp;gt;'

   filter: function(image) {
    return image.type === 'image';
   }
  
  tutorialFeed.run();

});&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    We can now use the &lt;span class=&quot;solid-definition&quot;&gt;After&lt;/span&gt; 
    function to display a loading animation while the photos are 
    being returned. This is a nice way to let your users know the images
    are on their way.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    You can check to see if any more images are available, if images are
    available show the load more button, if no images are 
    available hide the button.
  &lt;/p&gt;
  &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;document.addEventListener(&quot;DOMContentLoaded&quot;, function() {
 
 var tutorialFeed = new Instafeed ({
 get: 'user',
 userId: '623597756',
 clientId: 'Client',
 accessToken: 'Access-Token',
 resolution: 'standard_resolution',
 sortBy: 'most-recent',
 limit: 9,
 template: '&amp;lt;div class=&quot;image-item insta-page&quot;&amp;gt;' +
  '&amp;lt;a class=&quot;image insta-image&quot; href=&quot;&amp;#123;&amp;#123;image&amp;#125;&amp;#125;&amp;gt;' +
  '&amp;lt;img alt=&quot;&amp;#123;&amp;#123;user.full_name&amp;#125;&amp;#125;&quot; src=&quot;&amp;#123;&amp;#123;image&amp;#125;&amp;#125;&amp;gt;' +
  '&amp;lt;div class=&quot;img-backdrop-tutorial&quot;&amp;gt;' +
  '&amp;lt;div class=&quot;insta-caption&quot;&amp;gt;' +
  '&amp;lt;p&amp;gt;&amp;#123;&amp;#123;caption&amp;#125;&amp;#125;&amp;lt;/p&amp;gt;' +
  '&amp;lt;/div&amp;gt;' +
  '&amp;lt;/div&amp;gt;' +
  '&amp;lt;div class=&quot;captions&quot;&amp;gt;' +
  '&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;' +
  '&amp;lt;/div&amp;gt;' +
  '&amp;lt;/a&amp;gt;' +
  '&amp;lt;/div&amp;gt;'
      
 filter: function(image) {
  return image.type === 'image';
 },
 
 after: function () {
  loader.style.display = 'none';
    if (!this.hasNext()) {
      loadButton.setAttribute('disabled', 'disabled');
    }
  }
});
  
tutorialFeed.run();

});&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;tutorial-insta-container&quot;&gt;
  &lt;div class=&quot;image-wrapper&quot; id=&quot;tutorial-instafeed&quot;&gt;
    &lt;div class=&quot;loader&quot; id=&quot;loader&quot;&gt;
      &lt;div class=&quot;line&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;line&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;line&quot;&gt;&lt;/div&gt;
      &lt;div class=&quot;line&quot;&gt;&lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;button id=&quot;insta-btn&quot; class=&quot;insta-btn&quot;&gt;See more&lt;/button&gt;
&lt;/div&gt;
&lt;div class=&quot;tutorial-body&quot;&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;You now have your instagram photos 
    showing on your site. 
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; If you hover the image you can see that
    the caption is also returned, &lt;span class=&quot;code-font&quot;&gt;instafeed&lt;/span&gt;
    allows developers to return more than the caption, you can return likes,
    comments, post type etc. See  &lt;span class=&quot;underline-definition&quot;&gt;
    &lt;a href=&quot;https://github.com/stevenschobert/instafeed.js/issues/21&quot;&gt;
    here 
    &lt;/a&gt;&lt;/span&gt; for a full list of returnable properties.
  &lt;/p&gt;
  &lt;h2 class=&quot;tutorial-section-heading&quot;&gt; Styling Images &lt;/h2&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; We are going to use 
    &lt;span class=&quot;code-font&quot;&gt;flexbox&lt;/span&gt; to display our images, combine
    this with &lt;span class=&quot;code-font&quot;&gt;Sass&lt;/span&gt; and we can style our 
    images quickly, we can also add animations and transition delays 
    using &lt;span class=&quot;code-font&quot;&gt;Sass&lt;/span&gt; loops.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    Using flexbox set the image-wrapper to display as a row that will
    wrap when there is no more space left.
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    To keep the images fluid, use the flex property. I could write a 
    whole post on &lt;span class=&quot;code-font&quot;&gt;flexbox&lt;/span&gt;, but for now 
    I will just briefly explain.
  &lt;/p&gt;
  &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code class=&quot;no-padding&quot;&gt;flex: 1 0 33%;&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    Each image will now grow and shrink at the same rate while 
    maintaining 33% of the space available
  &lt;/p&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt;
    Using a &lt;span class=&quot;code-font&quot;&gt;loop&lt;/span&gt;, add a new animation 
    delay to each item. I chose to add 1s delay between each item. 
    Setting each item to be invisible prior to the animation running.
  &lt;/p&gt;
  &lt;div class=&quot;code-container&quot;&gt;
&lt;pre class=&quot;code code-css&quot;&gt;&lt;code&gt;animation-delay: (#{$i * .1s});&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  &lt;div class='code-container'&gt;
&lt;pre class='code code-css'&gt;&lt;code&gt;$insta-wrapper-max-width: 965px;
$insta-wrapper-min-height: 100px;
$transition: all .17s cubic-bezier(.4, 0, 1, 1);
  
.image-wrapper {
  box-sizing: border-box;
  display: flex;
  flex-flow: row wrap;
  flex-grow: 1;
  justify-content: space-around;
  margin: 0 auto 24px;
  max-width: $insta-wrapper-max-width;
  min-height: $insta-wrapper-min-height;
  position: relative;
  width: $width;
}
  
.image-item {
  animation: slide-item .3s ease forwards;
  box-sizing: border-box;
  flex: 1 0 33%;
  transform: translateY(250px);
  visibility: hidden;
  width: $width;
  @for $i from 1 through 10 {
   &amp;:nth-child(#{$i}) {
    animation-delay: (#{$i * .1s});
   }
 }
}

.insta-page {
  padding: 12px;
}

.image {
 display: block;
 position: relative;
 transition: $transition;
 width: $width;
  
 img {
  display: block;
  max-width: $width;
 }
}&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
  &lt;p class=&quot;tutorial-paragraph&quot;&gt; And finally the animations &lt;/p&gt;
&lt;pre class='code code-css'&gt;&lt;code&gt;@keyframes slide-item {
 60% { 
 transform: translateY(-10px);
 }
 100% {
  opacity: 1;
  transform: translateY(0);
  visibility: visible;
 }
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html">With over 300 million daily images posted to instagram, it is the number one social network for sharing images and videos. This tutorial will show you how to display your instagram feed on your website. If you are more interested in the Sass then click Here Getting started To follow this demo you will need the following Instafeed.js and Instagram developer access Once you have downloaded instafeed place it your javascript directory and reference it. &amp;lt;script type=&quot;text/javascript&quot; src=&quot;js/instafeed.min.js&quot;&amp;gt; Then add it to the html &amp;lt;div id=&quot;instafeed-tutorial&quot;&amp;gt;&amp;lt;/div&amp;gt; Instagram Developer Before you can access your photos you must first register your application with Instagram. The following steps are to set up a developer account. Without developer access Instagram does not permit the retrieval of images. Go to Instagram developer portal Click the 'Register Your Application' button. Application Name: This can be anything, As long as it does not contain any of the following: ‘insta’, ‘gram’, ‘IG’ or ‘Instagram’  Description: Best to keep this simple, e.g. &quot;Gallery for personal site&quot;  Company Name: Company name can be your name Website URL: This is the url of your website Valid Redirect URIs: For the purpose of this demo your sites URL will suffice nobody will be logging into your application as we are running in Sandbox mode (see api docs). Privacy Policy: If you have a privacy policy include it here, if not just add your site URL. Contact Email: Add your email Finally, switch to the Security tab and deselect the ‘Disable implicit OAuth’ checkbox, then hit Register. Connecting Instagram There are a number of steps involved here, it may take one or two tries to get it all correct. Next step is to get a USER-ID, click here . You want to enter the username, the one you use to sign in. Once you have your own ID keep it handy as you will need it soon. To get your CLIENT-ID, paste the following into your browser https://api.instagram.com/oauth/authorize/?client_id=CLIENT-ID&amp;redirect_uri=REDIRECT-URI&amp;response_type=token Now replace CLIENT-ID with the CLIENT-ID generated. Now replace REDIRECT-URI with the REDIRECT-URI that you included when setting up. Load the URL. Once you have loaded the URL, your ACCESS-TOKEN should be in the URL 'http://your-redirect-uri#access_token=ACCESS-TOKEN' Copy the ACCESS-TOKEN Instafeed Options You now have everything needed to use the instafeed, now let's briefly explore the API options, For detailed information about the API head over to the Github page . Resolution: Three options: thumbnail (default) 150 x 150 low_resolution 306 x 306 standard_resolution 612 x 612 Target Either the ID name or the DOM element itself where you want to add the images to. Template: Allows us to use a custom template to use for images, we will be using the template to create our gallery Get: There are a number of options here popular (default) - Images from the popular page tagged - Images with a specific tag. Use tagName to specify the tag. location - Images from a location. Use locationId to specify the location user - Images from a user. Use userId to specify the user. SortBy: There are a number of options here none (default) - As they come from Instagram. most-recent least-recent most-liked least-liked most-commented least-commented Links: Wrap the image in a link. Limit: By default instagram photos will run in sandbox mode, This means that image retrieval is capped at a maximum of twenty images,by adding a limit that is less than the maximum twenty we can paginate through our images and reduce the initial page load. Advanced Options There are a number of advanced options such as what to do before and after images are returned. Before: Function called before fetching images from Instagram After: Function called when images have been added to the page. Success: Function called when Instagram returns valid data. Error: Function called when there is an error fetching images. Filter: Function used to exclude images from your results, e.g Show only photos, videos Putting it all together document.addEventListener(&quot;DOMContentLoaded&quot;, function() { var tutorialFeed = new Instafeed ({ get: 'user', userId: '623597756', clientId: 'Client', target: 'tutorial-instafeed', accessToken: 'Access-Token', resolution: 'standard_resolution', sortBy: 'most-recent', limit: 9, template: '&amp;lt;div class=&quot;image-item insta-page&quot;&amp;gt;' + '&amp;lt;a class=&quot;image insta-image&quot; href=&quot;&amp;#123;&amp;#123;image&amp;#125;&amp;#125;&amp;gt;' + '&amp;lt;img alt=&quot;&amp;#123;&amp;#123;user.full_name&amp;#125;&amp;#125;&quot; src=&quot;&amp;#123;&amp;#123;image&amp;#125;&amp;#125;&amp;gt;' + '&amp;lt;div class=&quot;img-backdrop-tutorial&quot;&amp;gt;' + '&amp;lt;div class=&quot;insta-caption&quot;&amp;gt;' + '&amp;lt;p&amp;gt;&amp;#123;&amp;#123;caption&amp;#125;&amp;#125;&amp;lt;/p&amp;gt;' + '&amp;lt;/div&amp;gt;' + '&amp;lt;/div&amp;gt;' + '&amp;lt;div class=&quot;captions&quot;&amp;gt;' + '&amp;lt;a&amp;gt;&amp;lt;/a&amp;gt;' + '&amp;lt;/div&amp;gt;' + '&amp;lt;/a&amp;gt;' + '&amp;lt;/div&amp;gt;'</summary></entry></feed>